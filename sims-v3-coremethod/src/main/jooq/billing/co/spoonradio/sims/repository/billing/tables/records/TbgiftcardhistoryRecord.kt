/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.billing.tables.records


import co.spoonradio.sims.repository.billing.tables.Tbgiftcardhistory

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TbgiftcardhistoryRecord() : UpdatableRecordImpl<TbgiftcardhistoryRecord>(Tbgiftcardhistory.TBGIFTCARDHISTORY), Record8<Int?, String?, String?, String?, String?, Int?, Int?, LocalDateTime?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var paymethod: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var txid: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var status: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var giftcardnumber: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var amount: Int?
        set(value) = set(5, value)
        get() = get(5) as Int?

    var userid: Int?
        set(value) = set(6, value)
        get() = get(6) as Int?

    var createddate: LocalDateTime?
        set(value) = set(7, value)
        get() = get(7) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Int?, String?, String?, String?, String?, Int?, Int?, LocalDateTime?> = super.fieldsRow() as Row8<Int?, String?, String?, String?, String?, Int?, Int?, LocalDateTime?>
    override fun valuesRow(): Row8<Int?, String?, String?, String?, String?, Int?, Int?, LocalDateTime?> = super.valuesRow() as Row8<Int?, String?, String?, String?, String?, Int?, Int?, LocalDateTime?>
    override fun field1(): Field<Int?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.ID
    override fun field2(): Field<String?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.PAYMETHOD
    override fun field3(): Field<String?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.TXID
    override fun field4(): Field<String?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.STATUS
    override fun field5(): Field<String?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.GIFTCARDNUMBER
    override fun field6(): Field<Int?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.AMOUNT
    override fun field7(): Field<Int?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.USERID
    override fun field8(): Field<LocalDateTime?> = Tbgiftcardhistory.TBGIFTCARDHISTORY.CREATEDDATE
    override fun component1(): Int? = id
    override fun component2(): String? = paymethod
    override fun component3(): String? = txid
    override fun component4(): String? = status
    override fun component5(): String? = giftcardnumber
    override fun component6(): Int? = amount
    override fun component7(): Int? = userid
    override fun component8(): LocalDateTime? = createddate
    override fun value1(): Int? = id
    override fun value2(): String? = paymethod
    override fun value3(): String? = txid
    override fun value4(): String? = status
    override fun value5(): String? = giftcardnumber
    override fun value6(): Int? = amount
    override fun value7(): Int? = userid
    override fun value8(): LocalDateTime? = createddate

    override fun value1(value: Int?): TbgiftcardhistoryRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): TbgiftcardhistoryRecord {
        this.paymethod = value
        return this
    }

    override fun value3(value: String?): TbgiftcardhistoryRecord {
        this.txid = value
        return this
    }

    override fun value4(value: String?): TbgiftcardhistoryRecord {
        this.status = value
        return this
    }

    override fun value5(value: String?): TbgiftcardhistoryRecord {
        this.giftcardnumber = value
        return this
    }

    override fun value6(value: Int?): TbgiftcardhistoryRecord {
        this.amount = value
        return this
    }

    override fun value7(value: Int?): TbgiftcardhistoryRecord {
        this.userid = value
        return this
    }

    override fun value8(value: LocalDateTime?): TbgiftcardhistoryRecord {
        this.createddate = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: Int?, value7: Int?, value8: LocalDateTime?): TbgiftcardhistoryRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised TbgiftcardhistoryRecord
     */
    constructor(id: Int? = null, paymethod: String? = null, txid: String? = null, status: String? = null, giftcardnumber: String? = null, amount: Int? = null, userid: Int? = null, createddate: LocalDateTime? = null): this() {
        this.id = id
        this.paymethod = paymethod
        this.txid = txid
        this.status = status
        this.giftcardnumber = giftcardnumber
        this.amount = amount
        this.userid = userid
        this.createddate = createddate
    }
}
