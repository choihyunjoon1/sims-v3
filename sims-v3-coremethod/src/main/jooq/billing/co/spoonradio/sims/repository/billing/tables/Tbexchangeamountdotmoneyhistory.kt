/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.billing.tables


import co.spoonradio.sims.repository.billing.DefaultSchema
import co.spoonradio.sims.repository.billing.keys.PK_EXCHANGEAMOUNTDOTMONEYHISTORY_EXCHANGEAMOUNTID
import co.spoonradio.sims.repository.billing.tables.records.TbexchangeamountdotmoneyhistoryRecord

import java.math.BigDecimal

import kotlin.collections.List

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Name
import org.jooq.Record
import org.jooq.Row2
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.TableOptions
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.impl.TableImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Tbexchangeamountdotmoneyhistory(
    alias: Name,
    child: Table<out Record>?,
    path: ForeignKey<out Record, TbexchangeamountdotmoneyhistoryRecord>?,
    aliased: Table<TbexchangeamountdotmoneyhistoryRecord>?,
    parameters: Array<Field<*>?>?
): TableImpl<TbexchangeamountdotmoneyhistoryRecord>(
    alias,
    DefaultSchema.DEFAULT_SCHEMA,
    child,
    path,
    aliased,
    parameters,
    DSL.comment(""),
    TableOptions.table()
) {
    companion object {

        /**
         * The reference instance of <code>tbExchangeAmountDotmoneyHistory</code>
         */
        val TBEXCHANGEAMOUNTDOTMONEYHISTORY = Tbexchangeamountdotmoneyhistory()
    }

    /**
     * The class holding records for this type
     */
    override fun getRecordType(): Class<TbexchangeamountdotmoneyhistoryRecord> = TbexchangeamountdotmoneyhistoryRecord::class.java

    /**
     * The column <code>tbExchangeAmountDotmoneyHistory.exchangeAmountId</code>.
     */
    val EXCHANGEAMOUNTID: TableField<TbexchangeamountdotmoneyhistoryRecord, Long?> = createField(DSL.name("exchangeAmountId"), SQLDataType.BIGINT.nullable(false), this, "")

    /**
     * The column <code>tbExchangeAmountDotmoneyHistory.dotmoneyHistoryId</code>.
     */
    val DOTMONEYHISTORYID: TableField<TbexchangeamountdotmoneyhistoryRecord, BigDecimal?> = createField(DSL.name("dotmoneyHistoryId"), SQLDataType.DECIMAL.nullable(false), this, "")

    private constructor(alias: Name, aliased: Table<TbexchangeamountdotmoneyhistoryRecord>?): this(alias, null, null, aliased, null)
    private constructor(alias: Name, aliased: Table<TbexchangeamountdotmoneyhistoryRecord>?, parameters: Array<Field<*>?>?): this(alias, null, null, aliased, parameters)

    /**
     * Create an aliased <code>tbExchangeAmountDotmoneyHistory</code> table reference
     */
    constructor(alias: String): this(DSL.name(alias))

    /**
     * Create an aliased <code>tbExchangeAmountDotmoneyHistory</code> table reference
     */
    constructor(alias: Name): this(alias, null)

    /**
     * Create a <code>tbExchangeAmountDotmoneyHistory</code> table reference
     */
    constructor(): this(DSL.name("tbExchangeAmountDotmoneyHistory"), null)

    constructor(child: Table<out Record>, key: ForeignKey<out Record, TbexchangeamountdotmoneyhistoryRecord>): this(Internal.createPathAlias(child, key), child, key, TBEXCHANGEAMOUNTDOTMONEYHISTORY, null)
    override fun getSchema(): Schema = DefaultSchema.DEFAULT_SCHEMA
    override fun getPrimaryKey(): UniqueKey<TbexchangeamountdotmoneyhistoryRecord> = PK_EXCHANGEAMOUNTDOTMONEYHISTORY_EXCHANGEAMOUNTID
    override fun getKeys(): List<UniqueKey<TbexchangeamountdotmoneyhistoryRecord>> = listOf(PK_EXCHANGEAMOUNTDOTMONEYHISTORY_EXCHANGEAMOUNTID)
    override fun `as`(alias: String): Tbexchangeamountdotmoneyhistory = Tbexchangeamountdotmoneyhistory(DSL.name(alias), this)
    override fun `as`(alias: Name): Tbexchangeamountdotmoneyhistory = Tbexchangeamountdotmoneyhistory(alias, this)

    /**
     * Rename this table
     */
    override fun rename(name: String): Tbexchangeamountdotmoneyhistory = Tbexchangeamountdotmoneyhistory(DSL.name(name), null)

    /**
     * Rename this table
     */
    override fun rename(name: Name): Tbexchangeamountdotmoneyhistory = Tbexchangeamountdotmoneyhistory(name, null)

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------
    override fun fieldsRow(): Row2<Long?, BigDecimal?> = super.fieldsRow() as Row2<Long?, BigDecimal?>
}
