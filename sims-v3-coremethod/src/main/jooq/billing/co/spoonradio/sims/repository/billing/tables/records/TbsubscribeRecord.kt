/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.billing.tables.records


import co.spoonradio.sims.repository.billing.tables.Tbsubscribe

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TbsubscribeRecord() : UpdatableRecordImpl<TbsubscribeRecord>(Tbsubscribe.TBSUBSCRIBE), Record13<Int?, String?, Byte?, Int?, Int?, Int?, Int?, Byte?, Boolean?, LocalDateTime?, LocalDateTime?, LocalDateTime?, LocalDateTime?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var originaltransactionid: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var status: Byte?
        set(value) = set(2, value)
        get() = get(2) as Byte?

    var productid: Int?
        set(value) = set(3, value)
        get() = get(3) as Int?

    var userid: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var price: Int?
        set(value) = set(5, value)
        get() = get(5) as Int?

    var spoonamount: Int?
        set(value) = set(6, value)
        get() = get(6) as Int?

    var platform: Byte?
        set(value) = set(7, value)
        get() = get(7) as Byte?

    var isautorenew: Boolean?
        set(value) = set(8, value)
        get() = get(8) as Boolean?

    var createddate: LocalDateTime?
        set(value) = set(9, value)
        get() = get(9) as LocalDateTime?

    var updateddate: LocalDateTime?
        set(value) = set(10, value)
        get() = get(10) as LocalDateTime?

    var startdate: LocalDateTime?
        set(value) = set(11, value)
        get() = get(11) as LocalDateTime?

    var expiredate: LocalDateTime?
        set(value) = set(12, value)
        get() = get(12) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<Int?, String?, Byte?, Int?, Int?, Int?, Int?, Byte?, Boolean?, LocalDateTime?, LocalDateTime?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row13<Int?, String?, Byte?, Int?, Int?, Int?, Int?, Byte?, Boolean?, LocalDateTime?, LocalDateTime?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row13<Int?, String?, Byte?, Int?, Int?, Int?, Int?, Byte?, Boolean?, LocalDateTime?, LocalDateTime?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row13<Int?, String?, Byte?, Int?, Int?, Int?, Int?, Byte?, Boolean?, LocalDateTime?, LocalDateTime?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Int?> = Tbsubscribe.TBSUBSCRIBE.ID
    override fun field2(): Field<String?> = Tbsubscribe.TBSUBSCRIBE.ORIGINALTRANSACTIONID
    override fun field3(): Field<Byte?> = Tbsubscribe.TBSUBSCRIBE.STATUS
    override fun field4(): Field<Int?> = Tbsubscribe.TBSUBSCRIBE.PRODUCTID
    override fun field5(): Field<Int?> = Tbsubscribe.TBSUBSCRIBE.USERID
    override fun field6(): Field<Int?> = Tbsubscribe.TBSUBSCRIBE.PRICE
    override fun field7(): Field<Int?> = Tbsubscribe.TBSUBSCRIBE.SPOONAMOUNT
    override fun field8(): Field<Byte?> = Tbsubscribe.TBSUBSCRIBE.PLATFORM
    override fun field9(): Field<Boolean?> = Tbsubscribe.TBSUBSCRIBE.ISAUTORENEW
    override fun field10(): Field<LocalDateTime?> = Tbsubscribe.TBSUBSCRIBE.CREATEDDATE
    override fun field11(): Field<LocalDateTime?> = Tbsubscribe.TBSUBSCRIBE.UPDATEDDATE
    override fun field12(): Field<LocalDateTime?> = Tbsubscribe.TBSUBSCRIBE.STARTDATE
    override fun field13(): Field<LocalDateTime?> = Tbsubscribe.TBSUBSCRIBE.EXPIREDATE
    override fun component1(): Int? = id
    override fun component2(): String? = originaltransactionid
    override fun component3(): Byte? = status
    override fun component4(): Int? = productid
    override fun component5(): Int? = userid
    override fun component6(): Int? = price
    override fun component7(): Int? = spoonamount
    override fun component8(): Byte? = platform
    override fun component9(): Boolean? = isautorenew
    override fun component10(): LocalDateTime? = createddate
    override fun component11(): LocalDateTime? = updateddate
    override fun component12(): LocalDateTime? = startdate
    override fun component13(): LocalDateTime? = expiredate
    override fun value1(): Int? = id
    override fun value2(): String? = originaltransactionid
    override fun value3(): Byte? = status
    override fun value4(): Int? = productid
    override fun value5(): Int? = userid
    override fun value6(): Int? = price
    override fun value7(): Int? = spoonamount
    override fun value8(): Byte? = platform
    override fun value9(): Boolean? = isautorenew
    override fun value10(): LocalDateTime? = createddate
    override fun value11(): LocalDateTime? = updateddate
    override fun value12(): LocalDateTime? = startdate
    override fun value13(): LocalDateTime? = expiredate

    override fun value1(value: Int?): TbsubscribeRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): TbsubscribeRecord {
        this.originaltransactionid = value
        return this
    }

    override fun value3(value: Byte?): TbsubscribeRecord {
        this.status = value
        return this
    }

    override fun value4(value: Int?): TbsubscribeRecord {
        this.productid = value
        return this
    }

    override fun value5(value: Int?): TbsubscribeRecord {
        this.userid = value
        return this
    }

    override fun value6(value: Int?): TbsubscribeRecord {
        this.price = value
        return this
    }

    override fun value7(value: Int?): TbsubscribeRecord {
        this.spoonamount = value
        return this
    }

    override fun value8(value: Byte?): TbsubscribeRecord {
        this.platform = value
        return this
    }

    override fun value9(value: Boolean?): TbsubscribeRecord {
        this.isautorenew = value
        return this
    }

    override fun value10(value: LocalDateTime?): TbsubscribeRecord {
        this.createddate = value
        return this
    }

    override fun value11(value: LocalDateTime?): TbsubscribeRecord {
        this.updateddate = value
        return this
    }

    override fun value12(value: LocalDateTime?): TbsubscribeRecord {
        this.startdate = value
        return this
    }

    override fun value13(value: LocalDateTime?): TbsubscribeRecord {
        this.expiredate = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: Byte?, value4: Int?, value5: Int?, value6: Int?, value7: Int?, value8: Byte?, value9: Boolean?, value10: LocalDateTime?, value11: LocalDateTime?, value12: LocalDateTime?, value13: LocalDateTime?): TbsubscribeRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised TbsubscribeRecord
     */
    constructor(id: Int? = null, originaltransactionid: String? = null, status: Byte? = null, productid: Int? = null, userid: Int? = null, price: Int? = null, spoonamount: Int? = null, platform: Byte? = null, isautorenew: Boolean? = null, createddate: LocalDateTime? = null, updateddate: LocalDateTime? = null, startdate: LocalDateTime? = null, expiredate: LocalDateTime? = null): this() {
        this.id = id
        this.originaltransactionid = originaltransactionid
        this.status = status
        this.productid = productid
        this.userid = userid
        this.price = price
        this.spoonamount = spoonamount
        this.platform = platform
        this.isautorenew = isautorenew
        this.createddate = createddate
        this.updateddate = updateddate
        this.startdate = startdate
        this.expiredate = expiredate
    }
}
