/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.billing.tables.records


import co.spoonradio.sims.repository.billing.tables.Tberrorlog

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TberrorlogRecord() : UpdatableRecordImpl<TberrorlogRecord>(Tberrorlog.TBERRORLOG), Record6<Int?, String?, String?, String?, String?, LocalDateTime?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var txid: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var actiontype: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var parameter: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var status: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var createddate: LocalDateTime?
        set(value) = set(5, value)
        get() = get(5) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, String?, String?, String?, String?, LocalDateTime?> = super.fieldsRow() as Row6<Int?, String?, String?, String?, String?, LocalDateTime?>
    override fun valuesRow(): Row6<Int?, String?, String?, String?, String?, LocalDateTime?> = super.valuesRow() as Row6<Int?, String?, String?, String?, String?, LocalDateTime?>
    override fun field1(): Field<Int?> = Tberrorlog.TBERRORLOG.ID
    override fun field2(): Field<String?> = Tberrorlog.TBERRORLOG.TXID
    override fun field3(): Field<String?> = Tberrorlog.TBERRORLOG.ACTIONTYPE
    override fun field4(): Field<String?> = Tberrorlog.TBERRORLOG.PARAMETER
    override fun field5(): Field<String?> = Tberrorlog.TBERRORLOG.STATUS
    override fun field6(): Field<LocalDateTime?> = Tberrorlog.TBERRORLOG.CREATEDDATE
    override fun component1(): Int? = id
    override fun component2(): String? = txid
    override fun component3(): String? = actiontype
    override fun component4(): String? = parameter
    override fun component5(): String? = status
    override fun component6(): LocalDateTime? = createddate
    override fun value1(): Int? = id
    override fun value2(): String? = txid
    override fun value3(): String? = actiontype
    override fun value4(): String? = parameter
    override fun value5(): String? = status
    override fun value6(): LocalDateTime? = createddate

    override fun value1(value: Int?): TberrorlogRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): TberrorlogRecord {
        this.txid = value
        return this
    }

    override fun value3(value: String?): TberrorlogRecord {
        this.actiontype = value
        return this
    }

    override fun value4(value: String?): TberrorlogRecord {
        this.parameter = value
        return this
    }

    override fun value5(value: String?): TberrorlogRecord {
        this.status = value
        return this
    }

    override fun value6(value: LocalDateTime?): TberrorlogRecord {
        this.createddate = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: LocalDateTime?): TberrorlogRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised TberrorlogRecord
     */
    constructor(id: Int? = null, txid: String? = null, actiontype: String? = null, parameter: String? = null, status: String? = null, createddate: LocalDateTime? = null): this() {
        this.id = id
        this.txid = txid
        this.actiontype = actiontype
        this.parameter = parameter
        this.status = status
        this.createddate = createddate
    }
}
