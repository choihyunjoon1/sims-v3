/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.billing.tables.records


import co.spoonradio.sims.repository.billing.tables.Tbtosshistory

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TbtosshistoryRecord() : UpdatableRecordImpl<TbtosshistoryRecord>(Tbtosshistory.TBTOSSHISTORY) {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var useragent: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var productdesc: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var status: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var txid: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var orderno: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var paytoken: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var approvaltime: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var discountedamount: Int?
        set(value) = set(8, value)
        get() = get(8) as Int?

    var paidpoint: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    var paidamount: Int?
        set(value) = set(10, value)
        get() = get(10) as Int?

    var paymethod: String?
        set(value) = set(11, value)
        get() = get(11) as String?

    var transactionid: String?
        set(value) = set(12, value)
        get() = get(12) as String?

    var cardcompanyname: String?
        set(value) = set(13, value)
        get() = get(13) as String?

    var cardcompanycode: Int?
        set(value) = set(14, value)
        get() = get(14) as Int?

    var cardauthorizationno: String?
        set(value) = set(15, value)
        get() = get(15) as String?

    var spreadout: Int?
        set(value) = set(16, value)
        get() = get(16) as Int?

    var nointerest: Boolean?
        set(value) = set(17, value)
        get() = get(17) as Boolean?

    var saleschecklinkurl: String?
        set(value) = set(18, value)
        get() = get(18) as String?

    var cardmethodtype: String?
        set(value) = set(19, value)
        get() = get(19) as String?

    var cardnumber: String?
        set(value) = set(20, value)
        get() = get(20) as String?

    var amount: Int?
        set(value) = set(21, value)
        get() = get(21) as Int?

    var amounttaxfree: Int?
        set(value) = set(22, value)
        get() = get(22) as Int?

    var errormsg: String?
        set(value) = set(23, value)
        get() = get(23) as String?

    var errorcode: String?
        set(value) = set(24, value)
        get() = get(24) as String?

    var created: LocalDateTime?
        set(value) = set(25, value)
        get() = get(25) as LocalDateTime?

    var productid: Int?
        set(value) = set(26, value)
        get() = get(26) as Int?

    var promotionid: Int?
        set(value) = set(27, value)
        get() = get(27) as Int?

    var userid: Int?
        set(value) = set(28, value)
        get() = get(28) as Int?

    var completed: LocalDateTime?
        set(value) = set(29, value)
        get() = get(29) as LocalDateTime?

    var quantity: Int?
        set(value) = set(30, value)
        get() = get(30) as Int?

    var updated: LocalDateTime?
        set(value) = set(31, value)
        get() = get(31) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised TbtosshistoryRecord
     */
    constructor(id: Int? = null, useragent: String? = null, productdesc: String? = null, status: String? = null, txid: String? = null, orderno: String? = null, paytoken: String? = null, approvaltime: String? = null, discountedamount: Int? = null, paidpoint: Int? = null, paidamount: Int? = null, paymethod: String? = null, transactionid: String? = null, cardcompanyname: String? = null, cardcompanycode: Int? = null, cardauthorizationno: String? = null, spreadout: Int? = null, nointerest: Boolean? = null, saleschecklinkurl: String? = null, cardmethodtype: String? = null, cardnumber: String? = null, amount: Int? = null, amounttaxfree: Int? = null, errormsg: String? = null, errorcode: String? = null, created: LocalDateTime? = null, productid: Int? = null, promotionid: Int? = null, userid: Int? = null, completed: LocalDateTime? = null, quantity: Int? = null, updated: LocalDateTime? = null): this() {
        this.id = id
        this.useragent = useragent
        this.productdesc = productdesc
        this.status = status
        this.txid = txid
        this.orderno = orderno
        this.paytoken = paytoken
        this.approvaltime = approvaltime
        this.discountedamount = discountedamount
        this.paidpoint = paidpoint
        this.paidamount = paidamount
        this.paymethod = paymethod
        this.transactionid = transactionid
        this.cardcompanyname = cardcompanyname
        this.cardcompanycode = cardcompanycode
        this.cardauthorizationno = cardauthorizationno
        this.spreadout = spreadout
        this.nointerest = nointerest
        this.saleschecklinkurl = saleschecklinkurl
        this.cardmethodtype = cardmethodtype
        this.cardnumber = cardnumber
        this.amount = amount
        this.amounttaxfree = amounttaxfree
        this.errormsg = errormsg
        this.errorcode = errorcode
        this.created = created
        this.productid = productid
        this.promotionid = promotionid
        this.userid = userid
        this.completed = completed
        this.quantity = quantity
        this.updated = updated
    }
}
