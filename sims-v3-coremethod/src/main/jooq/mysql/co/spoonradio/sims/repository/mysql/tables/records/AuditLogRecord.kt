/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.AuditLog

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record16
import org.jooq.Row16
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AuditLogRecord() : UpdatableRecordImpl<AuditLogRecord>(AuditLog.AUDIT_LOG), Record16<Int?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?, String?, String?, LocalDateTime?, String?, String?, String?> {

    var auditLogId: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var accessIp: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var accessAgent: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var apiUrl: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var apiMethod: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var apiDetail: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var reqParameter: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var subMenuId: Int?
        set(value) = set(7, value)
        get() = get(7) as Int?

    var subMenuName: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var userId: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    var userName: String?
        set(value) = set(10, value)
        get() = get(10) as String?

    var resultCd: String?
        set(value) = set(11, value)
        get() = get(11) as String?

    var createDt: LocalDateTime?
        set(value) = set(12, value)
        get() = get(12) as LocalDateTime?

    var downloadReason: String?
        set(value) = set(13, value)
        get() = get(13) as String?

    var enApiDetail: String?
        set(value) = set(14, value)
        get() = get(14) as String?

    var enSubMenuName: String?
        set(value) = set(15, value)
        get() = get(15) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row16<Int?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?, String?, String?, LocalDateTime?, String?, String?, String?> = super.fieldsRow() as Row16<Int?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?, String?, String?, LocalDateTime?, String?, String?, String?>
    override fun valuesRow(): Row16<Int?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?, String?, String?, LocalDateTime?, String?, String?, String?> = super.valuesRow() as Row16<Int?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?, String?, String?, LocalDateTime?, String?, String?, String?>
    override fun field1(): Field<Int?> = AuditLog.AUDIT_LOG.AUDIT_LOG_ID
    override fun field2(): Field<String?> = AuditLog.AUDIT_LOG.ACCESS_IP
    override fun field3(): Field<String?> = AuditLog.AUDIT_LOG.ACCESS_AGENT
    override fun field4(): Field<String?> = AuditLog.AUDIT_LOG.API_URL
    override fun field5(): Field<String?> = AuditLog.AUDIT_LOG.API_METHOD
    override fun field6(): Field<String?> = AuditLog.AUDIT_LOG.API_DETAIL
    override fun field7(): Field<String?> = AuditLog.AUDIT_LOG.REQ_PARAMETER
    override fun field8(): Field<Int?> = AuditLog.AUDIT_LOG.SUB_MENU_ID
    override fun field9(): Field<String?> = AuditLog.AUDIT_LOG.SUB_MENU_NAME
    override fun field10(): Field<Int?> = AuditLog.AUDIT_LOG.USER_ID
    override fun field11(): Field<String?> = AuditLog.AUDIT_LOG.USER_NAME
    override fun field12(): Field<String?> = AuditLog.AUDIT_LOG.RESULT_CD
    override fun field13(): Field<LocalDateTime?> = AuditLog.AUDIT_LOG.CREATE_DT
    override fun field14(): Field<String?> = AuditLog.AUDIT_LOG.DOWNLOAD_REASON
    override fun field15(): Field<String?> = AuditLog.AUDIT_LOG.EN_API_DETAIL
    override fun field16(): Field<String?> = AuditLog.AUDIT_LOG.EN_SUB_MENU_NAME
    override fun component1(): Int? = auditLogId
    override fun component2(): String? = accessIp
    override fun component3(): String? = accessAgent
    override fun component4(): String? = apiUrl
    override fun component5(): String? = apiMethod
    override fun component6(): String? = apiDetail
    override fun component7(): String? = reqParameter
    override fun component8(): Int? = subMenuId
    override fun component9(): String? = subMenuName
    override fun component10(): Int? = userId
    override fun component11(): String? = userName
    override fun component12(): String? = resultCd
    override fun component13(): LocalDateTime? = createDt
    override fun component14(): String? = downloadReason
    override fun component15(): String? = enApiDetail
    override fun component16(): String? = enSubMenuName
    override fun value1(): Int? = auditLogId
    override fun value2(): String? = accessIp
    override fun value3(): String? = accessAgent
    override fun value4(): String? = apiUrl
    override fun value5(): String? = apiMethod
    override fun value6(): String? = apiDetail
    override fun value7(): String? = reqParameter
    override fun value8(): Int? = subMenuId
    override fun value9(): String? = subMenuName
    override fun value10(): Int? = userId
    override fun value11(): String? = userName
    override fun value12(): String? = resultCd
    override fun value13(): LocalDateTime? = createDt
    override fun value14(): String? = downloadReason
    override fun value15(): String? = enApiDetail
    override fun value16(): String? = enSubMenuName

    override fun value1(value: Int?): AuditLogRecord {
        this.auditLogId = value
        return this
    }

    override fun value2(value: String?): AuditLogRecord {
        this.accessIp = value
        return this
    }

    override fun value3(value: String?): AuditLogRecord {
        this.accessAgent = value
        return this
    }

    override fun value4(value: String?): AuditLogRecord {
        this.apiUrl = value
        return this
    }

    override fun value5(value: String?): AuditLogRecord {
        this.apiMethod = value
        return this
    }

    override fun value6(value: String?): AuditLogRecord {
        this.apiDetail = value
        return this
    }

    override fun value7(value: String?): AuditLogRecord {
        this.reqParameter = value
        return this
    }

    override fun value8(value: Int?): AuditLogRecord {
        this.subMenuId = value
        return this
    }

    override fun value9(value: String?): AuditLogRecord {
        this.subMenuName = value
        return this
    }

    override fun value10(value: Int?): AuditLogRecord {
        this.userId = value
        return this
    }

    override fun value11(value: String?): AuditLogRecord {
        this.userName = value
        return this
    }

    override fun value12(value: String?): AuditLogRecord {
        this.resultCd = value
        return this
    }

    override fun value13(value: LocalDateTime?): AuditLogRecord {
        this.createDt = value
        return this
    }

    override fun value14(value: String?): AuditLogRecord {
        this.downloadReason = value
        return this
    }

    override fun value15(value: String?): AuditLogRecord {
        this.enApiDetail = value
        return this
    }

    override fun value16(value: String?): AuditLogRecord {
        this.enSubMenuName = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: Int?, value9: String?, value10: Int?, value11: String?, value12: String?, value13: LocalDateTime?, value14: String?, value15: String?, value16: String?): AuditLogRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        return this
    }

    /**
     * Create a detached, initialised AuditLogRecord
     */
    constructor(auditLogId: Int? = null, accessIp: String? = null, accessAgent: String? = null, apiUrl: String? = null, apiMethod: String? = null, apiDetail: String? = null, reqParameter: String? = null, subMenuId: Int? = null, subMenuName: String? = null, userId: Int? = null, userName: String? = null, resultCd: String? = null, createDt: LocalDateTime? = null, downloadReason: String? = null, enApiDetail: String? = null, enSubMenuName: String? = null): this() {
        this.auditLogId = auditLogId
        this.accessIp = accessIp
        this.accessAgent = accessAgent
        this.apiUrl = apiUrl
        this.apiMethod = apiMethod
        this.apiDetail = apiDetail
        this.reqParameter = reqParameter
        this.subMenuId = subMenuId
        this.subMenuName = subMenuName
        this.userId = userId
        this.userName = userName
        this.resultCd = resultCd
        this.createDt = createDt
        this.downloadReason = downloadReason
        this.enApiDetail = enApiDetail
        this.enSubMenuName = enSubMenuName
    }
}
