/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.BatchLogDeail

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BatchLogDeailRecord() : UpdatableRecordImpl<BatchLogDeailRecord>(BatchLogDeail.BATCH_LOG_DEAIL), Record6<Int?, String?, Int?, Int?, LocalDateTime?, Int?> {

    var batchLogDetailId: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var description: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var userId: Int?
        set(value) = set(2, value)
        get() = get(2) as Int?

    var resultCd: Int?
        set(value) = set(3, value)
        get() = get(3) as Int?

    var createDt: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var batchLogId: Int?
        set(value) = set(5, value)
        get() = get(5) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, String?, Int?, Int?, LocalDateTime?, Int?> = super.fieldsRow() as Row6<Int?, String?, Int?, Int?, LocalDateTime?, Int?>
    override fun valuesRow(): Row6<Int?, String?, Int?, Int?, LocalDateTime?, Int?> = super.valuesRow() as Row6<Int?, String?, Int?, Int?, LocalDateTime?, Int?>
    override fun field1(): Field<Int?> = BatchLogDeail.BATCH_LOG_DEAIL.BATCH_LOG_DETAIL_ID
    override fun field2(): Field<String?> = BatchLogDeail.BATCH_LOG_DEAIL.DESCRIPTION
    override fun field3(): Field<Int?> = BatchLogDeail.BATCH_LOG_DEAIL.USER_ID
    override fun field4(): Field<Int?> = BatchLogDeail.BATCH_LOG_DEAIL.RESULT_CD
    override fun field5(): Field<LocalDateTime?> = BatchLogDeail.BATCH_LOG_DEAIL.CREATE_DT
    override fun field6(): Field<Int?> = BatchLogDeail.BATCH_LOG_DEAIL.BATCH_LOG_ID
    override fun component1(): Int? = batchLogDetailId
    override fun component2(): String? = description
    override fun component3(): Int? = userId
    override fun component4(): Int? = resultCd
    override fun component5(): LocalDateTime? = createDt
    override fun component6(): Int? = batchLogId
    override fun value1(): Int? = batchLogDetailId
    override fun value2(): String? = description
    override fun value3(): Int? = userId
    override fun value4(): Int? = resultCd
    override fun value5(): LocalDateTime? = createDt
    override fun value6(): Int? = batchLogId

    override fun value1(value: Int?): BatchLogDeailRecord {
        this.batchLogDetailId = value
        return this
    }

    override fun value2(value: String?): BatchLogDeailRecord {
        this.description = value
        return this
    }

    override fun value3(value: Int?): BatchLogDeailRecord {
        this.userId = value
        return this
    }

    override fun value4(value: Int?): BatchLogDeailRecord {
        this.resultCd = value
        return this
    }

    override fun value5(value: LocalDateTime?): BatchLogDeailRecord {
        this.createDt = value
        return this
    }

    override fun value6(value: Int?): BatchLogDeailRecord {
        this.batchLogId = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: Int?, value4: Int?, value5: LocalDateTime?, value6: Int?): BatchLogDeailRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised BatchLogDeailRecord
     */
    constructor(batchLogDetailId: Int? = null, description: String? = null, userId: Int? = null, resultCd: Int? = null, createDt: LocalDateTime? = null, batchLogId: Int? = null): this() {
        this.batchLogDetailId = batchLogDetailId
        this.description = description
        this.userId = userId
        this.resultCd = resultCd
        this.createDt = createDt
        this.batchLogId = batchLogId
    }
}
