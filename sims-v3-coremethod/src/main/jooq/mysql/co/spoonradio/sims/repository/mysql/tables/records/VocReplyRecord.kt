/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.VocReply

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VocReplyRecord() : UpdatableRecordImpl<VocReplyRecord>(VocReply.VOC_REPLY), Record6<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?> {

    var replyId: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var vocHistId: Int?
        set(value) = set(1, value)
        get() = get(1) as Int?

    var reply: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var createDt: LocalDateTime?
        set(value) = set(3, value)
        get() = get(3) as LocalDateTime?

    var updateDt: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var memberUserId: Int?
        set(value) = set(5, value)
        get() = get(5) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?> = super.fieldsRow() as Row6<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?>
    override fun valuesRow(): Row6<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?> = super.valuesRow() as Row6<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?>
    override fun field1(): Field<Int?> = VocReply.VOC_REPLY.REPLY_ID
    override fun field2(): Field<Int?> = VocReply.VOC_REPLY.VOC_HIST_ID
    override fun field3(): Field<String?> = VocReply.VOC_REPLY.REPLY
    override fun field4(): Field<LocalDateTime?> = VocReply.VOC_REPLY.CREATE_DT
    override fun field5(): Field<LocalDateTime?> = VocReply.VOC_REPLY.UPDATE_DT
    override fun field6(): Field<Int?> = VocReply.VOC_REPLY.MEMBER_USER_ID
    override fun component1(): Int? = replyId
    override fun component2(): Int? = vocHistId
    override fun component3(): String? = reply
    override fun component4(): LocalDateTime? = createDt
    override fun component5(): LocalDateTime? = updateDt
    override fun component6(): Int? = memberUserId
    override fun value1(): Int? = replyId
    override fun value2(): Int? = vocHistId
    override fun value3(): String? = reply
    override fun value4(): LocalDateTime? = createDt
    override fun value5(): LocalDateTime? = updateDt
    override fun value6(): Int? = memberUserId

    override fun value1(value: Int?): VocReplyRecord {
        this.replyId = value
        return this
    }

    override fun value2(value: Int?): VocReplyRecord {
        this.vocHistId = value
        return this
    }

    override fun value3(value: String?): VocReplyRecord {
        this.reply = value
        return this
    }

    override fun value4(value: LocalDateTime?): VocReplyRecord {
        this.createDt = value
        return this
    }

    override fun value5(value: LocalDateTime?): VocReplyRecord {
        this.updateDt = value
        return this
    }

    override fun value6(value: Int?): VocReplyRecord {
        this.memberUserId = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: LocalDateTime?, value5: LocalDateTime?, value6: Int?): VocReplyRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised VocReplyRecord
     */
    constructor(replyId: Int? = null, vocHistId: Int? = null, reply: String? = null, createDt: LocalDateTime? = null, updateDt: LocalDateTime? = null, memberUserId: Int? = null): this() {
        this.replyId = replyId
        this.vocHistId = vocHistId
        this.reply = reply
        this.createDt = createDt
        this.updateDt = updateDt
        this.memberUserId = memberUserId
    }
}
