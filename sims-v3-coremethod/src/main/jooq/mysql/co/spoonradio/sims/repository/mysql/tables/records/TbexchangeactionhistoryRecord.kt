/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.Tbexchangeactionhistory

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TbexchangeactionhistoryRecord() : UpdatableRecordImpl<TbexchangeactionhistoryRecord>(Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY), Record6<Long?, String?, String?, String?, LocalDateTime?, Long?> {

    var id: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var txid: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var targetlockid: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var type: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var created: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var creator: Long?
        set(value) = set(5, value)
        get() = get(5) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Long?, String?, String?, String?, LocalDateTime?, Long?> = super.fieldsRow() as Row6<Long?, String?, String?, String?, LocalDateTime?, Long?>
    override fun valuesRow(): Row6<Long?, String?, String?, String?, LocalDateTime?, Long?> = super.valuesRow() as Row6<Long?, String?, String?, String?, LocalDateTime?, Long?>
    override fun field1(): Field<Long?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.ID
    override fun field2(): Field<String?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.TXID
    override fun field3(): Field<String?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.TARGETLOCKID
    override fun field4(): Field<String?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.TYPE
    override fun field5(): Field<LocalDateTime?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.CREATED
    override fun field6(): Field<Long?> = Tbexchangeactionhistory.TBEXCHANGEACTIONHISTORY.CREATOR
    override fun component1(): Long? = id
    override fun component2(): String? = txid
    override fun component3(): String? = targetlockid
    override fun component4(): String? = type
    override fun component5(): LocalDateTime? = created
    override fun component6(): Long? = creator
    override fun value1(): Long? = id
    override fun value2(): String? = txid
    override fun value3(): String? = targetlockid
    override fun value4(): String? = type
    override fun value5(): LocalDateTime? = created
    override fun value6(): Long? = creator

    override fun value1(value: Long?): TbexchangeactionhistoryRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): TbexchangeactionhistoryRecord {
        this.txid = value
        return this
    }

    override fun value3(value: String?): TbexchangeactionhistoryRecord {
        this.targetlockid = value
        return this
    }

    override fun value4(value: String?): TbexchangeactionhistoryRecord {
        this.type = value
        return this
    }

    override fun value5(value: LocalDateTime?): TbexchangeactionhistoryRecord {
        this.created = value
        return this
    }

    override fun value6(value: Long?): TbexchangeactionhistoryRecord {
        this.creator = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: String?, value5: LocalDateTime?, value6: Long?): TbexchangeactionhistoryRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised TbexchangeactionhistoryRecord
     */
    constructor(id: Long? = null, txid: String? = null, targetlockid: String? = null, type: String? = null, created: LocalDateTime? = null, creator: Long? = null): this() {
        this.id = id
        this.txid = txid
        this.targetlockid = targetlockid
        this.type = type
        this.created = created
        this.creator = creator
    }
}
