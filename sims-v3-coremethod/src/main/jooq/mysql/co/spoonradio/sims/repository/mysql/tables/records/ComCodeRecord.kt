/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.ComCode

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record16
import org.jooq.Row16
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ComCodeRecord() : UpdatableRecordImpl<ComCodeRecord>(ComCode.COM_CODE), Record16<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Byte?, Int?, LocalDateTime?, LocalDateTime?, String?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var grpCodeCd: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var grpCodeName: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var codeCd: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var codeNm: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var codeDesc: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var etc1: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var etc2: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var etc3: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var parentGrpCodeCd: String?
        set(value) = set(9, value)
        get() = get(9) as String?

    var parentCodeCd: String?
        set(value) = set(10, value)
        get() = get(10) as String?

    var useYn: Byte?
        set(value) = set(11, value)
        get() = get(11) as Byte?

    var ord: Int?
        set(value) = set(12, value)
        get() = get(12) as Int?

    var updateDt: LocalDateTime?
        set(value) = set(13, value)
        get() = get(13) as LocalDateTime?

    var createDt: LocalDateTime?
        set(value) = set(14, value)
        get() = get(14) as LocalDateTime?

    var enCodeNm: String?
        set(value) = set(15, value)
        get() = get(15) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row16<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Byte?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.fieldsRow() as Row16<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Byte?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun valuesRow(): Row16<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Byte?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.valuesRow() as Row16<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Byte?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun field1(): Field<Int?> = ComCode.COM_CODE.ID
    override fun field2(): Field<String?> = ComCode.COM_CODE.GRP_CODE_CD
    override fun field3(): Field<String?> = ComCode.COM_CODE.GRP_CODE_NAME
    override fun field4(): Field<String?> = ComCode.COM_CODE.CODE_CD
    override fun field5(): Field<String?> = ComCode.COM_CODE.CODE_NM
    override fun field6(): Field<String?> = ComCode.COM_CODE.CODE_DESC
    override fun field7(): Field<String?> = ComCode.COM_CODE.ETC1
    override fun field8(): Field<String?> = ComCode.COM_CODE.ETC2
    override fun field9(): Field<String?> = ComCode.COM_CODE.ETC3
    override fun field10(): Field<String?> = ComCode.COM_CODE.PARENT_GRP_CODE_CD
    override fun field11(): Field<String?> = ComCode.COM_CODE.PARENT_CODE_CD
    override fun field12(): Field<Byte?> = ComCode.COM_CODE.USE_YN
    override fun field13(): Field<Int?> = ComCode.COM_CODE.ORD
    override fun field14(): Field<LocalDateTime?> = ComCode.COM_CODE.UPDATE_DT
    override fun field15(): Field<LocalDateTime?> = ComCode.COM_CODE.CREATE_DT
    override fun field16(): Field<String?> = ComCode.COM_CODE.EN_CODE_NM
    override fun component1(): Int? = id
    override fun component2(): String? = grpCodeCd
    override fun component3(): String? = grpCodeName
    override fun component4(): String? = codeCd
    override fun component5(): String? = codeNm
    override fun component6(): String? = codeDesc
    override fun component7(): String? = etc1
    override fun component8(): String? = etc2
    override fun component9(): String? = etc3
    override fun component10(): String? = parentGrpCodeCd
    override fun component11(): String? = parentCodeCd
    override fun component12(): Byte? = useYn
    override fun component13(): Int? = ord
    override fun component14(): LocalDateTime? = updateDt
    override fun component15(): LocalDateTime? = createDt
    override fun component16(): String? = enCodeNm
    override fun value1(): Int? = id
    override fun value2(): String? = grpCodeCd
    override fun value3(): String? = grpCodeName
    override fun value4(): String? = codeCd
    override fun value5(): String? = codeNm
    override fun value6(): String? = codeDesc
    override fun value7(): String? = etc1
    override fun value8(): String? = etc2
    override fun value9(): String? = etc3
    override fun value10(): String? = parentGrpCodeCd
    override fun value11(): String? = parentCodeCd
    override fun value12(): Byte? = useYn
    override fun value13(): Int? = ord
    override fun value14(): LocalDateTime? = updateDt
    override fun value15(): LocalDateTime? = createDt
    override fun value16(): String? = enCodeNm

    override fun value1(value: Int?): ComCodeRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ComCodeRecord {
        this.grpCodeCd = value
        return this
    }

    override fun value3(value: String?): ComCodeRecord {
        this.grpCodeName = value
        return this
    }

    override fun value4(value: String?): ComCodeRecord {
        this.codeCd = value
        return this
    }

    override fun value5(value: String?): ComCodeRecord {
        this.codeNm = value
        return this
    }

    override fun value6(value: String?): ComCodeRecord {
        this.codeDesc = value
        return this
    }

    override fun value7(value: String?): ComCodeRecord {
        this.etc1 = value
        return this
    }

    override fun value8(value: String?): ComCodeRecord {
        this.etc2 = value
        return this
    }

    override fun value9(value: String?): ComCodeRecord {
        this.etc3 = value
        return this
    }

    override fun value10(value: String?): ComCodeRecord {
        this.parentGrpCodeCd = value
        return this
    }

    override fun value11(value: String?): ComCodeRecord {
        this.parentCodeCd = value
        return this
    }

    override fun value12(value: Byte?): ComCodeRecord {
        this.useYn = value
        return this
    }

    override fun value13(value: Int?): ComCodeRecord {
        this.ord = value
        return this
    }

    override fun value14(value: LocalDateTime?): ComCodeRecord {
        this.updateDt = value
        return this
    }

    override fun value15(value: LocalDateTime?): ComCodeRecord {
        this.createDt = value
        return this
    }

    override fun value16(value: String?): ComCodeRecord {
        this.enCodeNm = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?, value12: Byte?, value13: Int?, value14: LocalDateTime?, value15: LocalDateTime?, value16: String?): ComCodeRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        return this
    }

    /**
     * Create a detached, initialised ComCodeRecord
     */
    constructor(id: Int? = null, grpCodeCd: String? = null, grpCodeName: String? = null, codeCd: String? = null, codeNm: String? = null, codeDesc: String? = null, etc1: String? = null, etc2: String? = null, etc3: String? = null, parentGrpCodeCd: String? = null, parentCodeCd: String? = null, useYn: Byte? = null, ord: Int? = null, updateDt: LocalDateTime? = null, createDt: LocalDateTime? = null, enCodeNm: String? = null): this() {
        this.id = id
        this.grpCodeCd = grpCodeCd
        this.grpCodeName = grpCodeName
        this.codeCd = codeCd
        this.codeNm = codeNm
        this.codeDesc = codeDesc
        this.etc1 = etc1
        this.etc2 = etc2
        this.etc3 = etc3
        this.parentGrpCodeCd = parentGrpCodeCd
        this.parentCodeCd = parentCodeCd
        this.useYn = useYn
        this.ord = ord
        this.updateDt = updateDt
        this.createDt = createDt
        this.enCodeNm = enCodeNm
    }
}
