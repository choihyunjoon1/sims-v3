/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.mysql.tables.records


import co.spoonradio.sims.repository.mysql.tables.SpcAuthReqInfo

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SpcAuthReqInfoRecord() : UpdatableRecordImpl<SpcAuthReqInfoRecord>(SpcAuthReqInfo.SPC_AUTH_REQ_INFO), Record7<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?, Int?> {

    var spcAuthApproveId: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var ord: Int?
        set(value) = set(1, value)
        get() = get(1) as Int?

    var statusCd: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var createDt: LocalDateTime?
        set(value) = set(3, value)
        get() = get(3) as LocalDateTime?

    var updateDt: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var approveUserId: Int?
        set(value) = set(5, value)
        get() = get(5) as Int?

    var spcAuthReqId: Int?
        set(value) = set(6, value)
        get() = get(6) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?, Int?> = super.fieldsRow() as Row7<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?, Int?>
    override fun valuesRow(): Row7<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?, Int?> = super.valuesRow() as Row7<Int?, Int?, String?, LocalDateTime?, LocalDateTime?, Int?, Int?>
    override fun field1(): Field<Int?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.SPC_AUTH_APPROVE_ID
    override fun field2(): Field<Int?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.ORD
    override fun field3(): Field<String?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.STATUS_CD
    override fun field4(): Field<LocalDateTime?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.CREATE_DT
    override fun field5(): Field<LocalDateTime?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.UPDATE_DT
    override fun field6(): Field<Int?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.APPROVE_USER_ID
    override fun field7(): Field<Int?> = SpcAuthReqInfo.SPC_AUTH_REQ_INFO.SPC_AUTH_REQ_ID
    override fun component1(): Int? = spcAuthApproveId
    override fun component2(): Int? = ord
    override fun component3(): String? = statusCd
    override fun component4(): LocalDateTime? = createDt
    override fun component5(): LocalDateTime? = updateDt
    override fun component6(): Int? = approveUserId
    override fun component7(): Int? = spcAuthReqId
    override fun value1(): Int? = spcAuthApproveId
    override fun value2(): Int? = ord
    override fun value3(): String? = statusCd
    override fun value4(): LocalDateTime? = createDt
    override fun value5(): LocalDateTime? = updateDt
    override fun value6(): Int? = approveUserId
    override fun value7(): Int? = spcAuthReqId

    override fun value1(value: Int?): SpcAuthReqInfoRecord {
        this.spcAuthApproveId = value
        return this
    }

    override fun value2(value: Int?): SpcAuthReqInfoRecord {
        this.ord = value
        return this
    }

    override fun value3(value: String?): SpcAuthReqInfoRecord {
        this.statusCd = value
        return this
    }

    override fun value4(value: LocalDateTime?): SpcAuthReqInfoRecord {
        this.createDt = value
        return this
    }

    override fun value5(value: LocalDateTime?): SpcAuthReqInfoRecord {
        this.updateDt = value
        return this
    }

    override fun value6(value: Int?): SpcAuthReqInfoRecord {
        this.approveUserId = value
        return this
    }

    override fun value7(value: Int?): SpcAuthReqInfoRecord {
        this.spcAuthReqId = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: LocalDateTime?, value5: LocalDateTime?, value6: Int?, value7: Int?): SpcAuthReqInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised SpcAuthReqInfoRecord
     */
    constructor(spcAuthApproveId: Int? = null, ord: Int? = null, statusCd: String? = null, createDt: LocalDateTime? = null, updateDt: LocalDateTime? = null, approveUserId: Int? = null, spcAuthReqId: Int? = null): this() {
        this.spcAuthApproveId = spcAuthApproveId
        this.ord = ord
        this.statusCd = statusCd
        this.createDt = createDt
        this.updateDt = updateDt
        this.approveUserId = approveUserId
        this.spcAuthReqId = spcAuthReqId
    }
}
