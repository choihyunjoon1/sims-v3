/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.UsersAccount

import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record15
import org.jooq.Row15
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersAccountRecord() : UpdatableRecordImpl<UsersAccountRecord>(UsersAccount.USERS_ACCOUNT), Record15<Int?, String?, String?, String?, String?, String?, String?, String?, String?, OffsetDateTime?, Int?, String?, String?, String?, OffsetDateTime?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var snsId: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var snsType: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var facebook: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var google: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var email: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var phone: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var countryPrefix: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var nationalNumber: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var created: OffsetDateTime?
        set(value) = set(9, value)
        get() = get(9) as OffsetDateTime?

    var userId: Int?
        set(value) = set(10, value)
        get() = get(10) as Int?

    var twitter: String?
        set(value) = set(11, value)
        get() = get(11) as String?

    var password: String?
        set(value) = set(12, value)
        get() = get(12) as String?

    var apple: String?
        set(value) = set(13, value)
        get() = get(13) as String?

    var updated: OffsetDateTime?
        set(value) = set(14, value)
        get() = get(14) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row15<Int?, String?, String?, String?, String?, String?, String?, String?, String?, OffsetDateTime?, Int?, String?, String?, String?, OffsetDateTime?> = super.fieldsRow() as Row15<Int?, String?, String?, String?, String?, String?, String?, String?, String?, OffsetDateTime?, Int?, String?, String?, String?, OffsetDateTime?>
    override fun valuesRow(): Row15<Int?, String?, String?, String?, String?, String?, String?, String?, String?, OffsetDateTime?, Int?, String?, String?, String?, OffsetDateTime?> = super.valuesRow() as Row15<Int?, String?, String?, String?, String?, String?, String?, String?, String?, OffsetDateTime?, Int?, String?, String?, String?, OffsetDateTime?>
    override fun field1(): Field<Int?> = UsersAccount.USERS_ACCOUNT.ID
    override fun field2(): Field<String?> = UsersAccount.USERS_ACCOUNT.SNS_ID
    override fun field3(): Field<String?> = UsersAccount.USERS_ACCOUNT.SNS_TYPE
    override fun field4(): Field<String?> = UsersAccount.USERS_ACCOUNT.FACEBOOK
    override fun field5(): Field<String?> = UsersAccount.USERS_ACCOUNT.GOOGLE
    override fun field6(): Field<String?> = UsersAccount.USERS_ACCOUNT.EMAIL
    override fun field7(): Field<String?> = UsersAccount.USERS_ACCOUNT.PHONE
    override fun field8(): Field<String?> = UsersAccount.USERS_ACCOUNT.COUNTRY_PREFIX
    override fun field9(): Field<String?> = UsersAccount.USERS_ACCOUNT.NATIONAL_NUMBER
    override fun field10(): Field<OffsetDateTime?> = UsersAccount.USERS_ACCOUNT.CREATED
    override fun field11(): Field<Int?> = UsersAccount.USERS_ACCOUNT.USER_ID
    override fun field12(): Field<String?> = UsersAccount.USERS_ACCOUNT.TWITTER
    override fun field13(): Field<String?> = UsersAccount.USERS_ACCOUNT.PASSWORD
    override fun field14(): Field<String?> = UsersAccount.USERS_ACCOUNT.APPLE
    override fun field15(): Field<OffsetDateTime?> = UsersAccount.USERS_ACCOUNT.UPDATED
    override fun component1(): Int? = id
    override fun component2(): String? = snsId
    override fun component3(): String? = snsType
    override fun component4(): String? = facebook
    override fun component5(): String? = google
    override fun component6(): String? = email
    override fun component7(): String? = phone
    override fun component8(): String? = countryPrefix
    override fun component9(): String? = nationalNumber
    override fun component10(): OffsetDateTime? = created
    override fun component11(): Int? = userId
    override fun component12(): String? = twitter
    override fun component13(): String? = password
    override fun component14(): String? = apple
    override fun component15(): OffsetDateTime? = updated
    override fun value1(): Int? = id
    override fun value2(): String? = snsId
    override fun value3(): String? = snsType
    override fun value4(): String? = facebook
    override fun value5(): String? = google
    override fun value6(): String? = email
    override fun value7(): String? = phone
    override fun value8(): String? = countryPrefix
    override fun value9(): String? = nationalNumber
    override fun value10(): OffsetDateTime? = created
    override fun value11(): Int? = userId
    override fun value12(): String? = twitter
    override fun value13(): String? = password
    override fun value14(): String? = apple
    override fun value15(): OffsetDateTime? = updated

    override fun value1(value: Int?): UsersAccountRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UsersAccountRecord {
        this.snsId = value
        return this
    }

    override fun value3(value: String?): UsersAccountRecord {
        this.snsType = value
        return this
    }

    override fun value4(value: String?): UsersAccountRecord {
        this.facebook = value
        return this
    }

    override fun value5(value: String?): UsersAccountRecord {
        this.google = value
        return this
    }

    override fun value6(value: String?): UsersAccountRecord {
        this.email = value
        return this
    }

    override fun value7(value: String?): UsersAccountRecord {
        this.phone = value
        return this
    }

    override fun value8(value: String?): UsersAccountRecord {
        this.countryPrefix = value
        return this
    }

    override fun value9(value: String?): UsersAccountRecord {
        this.nationalNumber = value
        return this
    }

    override fun value10(value: OffsetDateTime?): UsersAccountRecord {
        this.created = value
        return this
    }

    override fun value11(value: Int?): UsersAccountRecord {
        this.userId = value
        return this
    }

    override fun value12(value: String?): UsersAccountRecord {
        this.twitter = value
        return this
    }

    override fun value13(value: String?): UsersAccountRecord {
        this.password = value
        return this
    }

    override fun value14(value: String?): UsersAccountRecord {
        this.apple = value
        return this
    }

    override fun value15(value: OffsetDateTime?): UsersAccountRecord {
        this.updated = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: OffsetDateTime?, value11: Int?, value12: String?, value13: String?, value14: String?, value15: OffsetDateTime?): UsersAccountRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        return this
    }

    /**
     * Create a detached, initialised UsersAccountRecord
     */
    constructor(id: Int? = null, snsId: String? = null, snsType: String? = null, facebook: String? = null, google: String? = null, email: String? = null, phone: String? = null, countryPrefix: String? = null, nationalNumber: String? = null, created: OffsetDateTime? = null, userId: Int? = null, twitter: String? = null, password: String? = null, apple: String? = null, updated: OffsetDateTime? = null): this() {
        this.id = id
        this.snsId = snsId
        this.snsType = snsType
        this.facebook = facebook
        this.google = google
        this.email = email
        this.phone = phone
        this.countryPrefix = countryPrefix
        this.nationalNumber = nationalNumber
        this.created = created
        this.userId = userId
        this.twitter = twitter
        this.password = password
        this.apple = apple
        this.updated = updated
    }
}
