/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.NiceNiceauthuserinfo

import java.time.LocalDate
import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class NiceNiceauthuserinfoRecord() : UpdatableRecordImpl<NiceNiceauthuserinfoRecord>(NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO), Record10<Int?, String?, Int?, LocalDate?, Int?, OffsetDateTime?, Int?, String?, String?, String?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var name: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var gender: Int?
        set(value) = set(2, value)
        get() = get(2) as Int?

    var birthDate: LocalDate?
        set(value) = set(3, value)
        get() = get(3) as LocalDate?

    var nationInfo: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var created: OffsetDateTime?
        set(value) = set(5, value)
        get() = get(5) as OffsetDateTime?

    var userId: Int?
        set(value) = set(6, value)
        get() = get(6) as Int?

    var ci: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var authType: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var virtualNumber: String?
        set(value) = set(9, value)
        get() = get(9) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<Int?, String?, Int?, LocalDate?, Int?, OffsetDateTime?, Int?, String?, String?, String?> = super.fieldsRow() as Row10<Int?, String?, Int?, LocalDate?, Int?, OffsetDateTime?, Int?, String?, String?, String?>
    override fun valuesRow(): Row10<Int?, String?, Int?, LocalDate?, Int?, OffsetDateTime?, Int?, String?, String?, String?> = super.valuesRow() as Row10<Int?, String?, Int?, LocalDate?, Int?, OffsetDateTime?, Int?, String?, String?, String?>
    override fun field1(): Field<Int?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.ID
    override fun field2(): Field<String?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.NAME
    override fun field3(): Field<Int?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.GENDER
    override fun field4(): Field<LocalDate?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.BIRTH_DATE
    override fun field5(): Field<Int?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.NATION_INFO
    override fun field6(): Field<OffsetDateTime?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.CREATED
    override fun field7(): Field<Int?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.USER_ID
    override fun field8(): Field<String?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.CI
    override fun field9(): Field<String?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.AUTH_TYPE
    override fun field10(): Field<String?> = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO.VIRTUAL_NUMBER
    override fun component1(): Int? = id
    override fun component2(): String? = name
    override fun component3(): Int? = gender
    override fun component4(): LocalDate? = birthDate
    override fun component5(): Int? = nationInfo
    override fun component6(): OffsetDateTime? = created
    override fun component7(): Int? = userId
    override fun component8(): String? = ci
    override fun component9(): String? = authType
    override fun component10(): String? = virtualNumber
    override fun value1(): Int? = id
    override fun value2(): String? = name
    override fun value3(): Int? = gender
    override fun value4(): LocalDate? = birthDate
    override fun value5(): Int? = nationInfo
    override fun value6(): OffsetDateTime? = created
    override fun value7(): Int? = userId
    override fun value8(): String? = ci
    override fun value9(): String? = authType
    override fun value10(): String? = virtualNumber

    override fun value1(value: Int?): NiceNiceauthuserinfoRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): NiceNiceauthuserinfoRecord {
        this.name = value
        return this
    }

    override fun value3(value: Int?): NiceNiceauthuserinfoRecord {
        this.gender = value
        return this
    }

    override fun value4(value: LocalDate?): NiceNiceauthuserinfoRecord {
        this.birthDate = value
        return this
    }

    override fun value5(value: Int?): NiceNiceauthuserinfoRecord {
        this.nationInfo = value
        return this
    }

    override fun value6(value: OffsetDateTime?): NiceNiceauthuserinfoRecord {
        this.created = value
        return this
    }

    override fun value7(value: Int?): NiceNiceauthuserinfoRecord {
        this.userId = value
        return this
    }

    override fun value8(value: String?): NiceNiceauthuserinfoRecord {
        this.ci = value
        return this
    }

    override fun value9(value: String?): NiceNiceauthuserinfoRecord {
        this.authType = value
        return this
    }

    override fun value10(value: String?): NiceNiceauthuserinfoRecord {
        this.virtualNumber = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: Int?, value4: LocalDate?, value5: Int?, value6: OffsetDateTime?, value7: Int?, value8: String?, value9: String?, value10: String?): NiceNiceauthuserinfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised NiceNiceauthuserinfoRecord
     */
    constructor(id: Int? = null, name: String? = null, gender: Int? = null, birthDate: LocalDate? = null, nationInfo: Int? = null, created: OffsetDateTime? = null, userId: Int? = null, ci: String? = null, authType: String? = null, virtualNumber: String? = null): this() {
        this.id = id
        this.name = name
        this.gender = gender
        this.birthDate = birthDate
        this.nationInfo = nationInfo
        this.created = created
        this.userId = userId
        this.ci = ci
        this.authType = authType
        this.virtualNumber = virtualNumber
    }
}
