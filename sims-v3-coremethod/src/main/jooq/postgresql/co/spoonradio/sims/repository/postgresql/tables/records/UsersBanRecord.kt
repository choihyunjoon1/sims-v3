/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.UsersBan

import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersBanRecord() : UpdatableRecordImpl<UsersBanRecord>(UsersBan.USERS_BAN), Record11<Int?, String?, String?, String?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, Int?, Int?, Int?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var detail: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var memo: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var deviceUniqueId: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var type: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var endDate: OffsetDateTime?
        set(value) = set(5, value)
        get() = get(5) as OffsetDateTime?

    var created: OffsetDateTime?
        set(value) = set(6, value)
        get() = get(6) as OffsetDateTime?

    var categoryContentId: Int?
        set(value) = set(7, value)
        get() = get(7) as Int?

    var categoryMainId: Int?
        set(value) = set(8, value)
        get() = get(8) as Int?

    var categorySubId: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    var userId: Int?
        set(value) = set(10, value)
        get() = get(10) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<Int?, String?, String?, String?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, Int?, Int?, Int?> = super.fieldsRow() as Row11<Int?, String?, String?, String?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, Int?, Int?, Int?>
    override fun valuesRow(): Row11<Int?, String?, String?, String?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, Int?, Int?, Int?> = super.valuesRow() as Row11<Int?, String?, String?, String?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, Int?, Int?, Int?>
    override fun field1(): Field<Int?> = UsersBan.USERS_BAN.ID
    override fun field2(): Field<String?> = UsersBan.USERS_BAN.DETAIL
    override fun field3(): Field<String?> = UsersBan.USERS_BAN.MEMO
    override fun field4(): Field<String?> = UsersBan.USERS_BAN.DEVICE_UNIQUE_ID
    override fun field5(): Field<Int?> = UsersBan.USERS_BAN.TYPE
    override fun field6(): Field<OffsetDateTime?> = UsersBan.USERS_BAN.END_DATE
    override fun field7(): Field<OffsetDateTime?> = UsersBan.USERS_BAN.CREATED
    override fun field8(): Field<Int?> = UsersBan.USERS_BAN.CATEGORY_CONTENT_ID
    override fun field9(): Field<Int?> = UsersBan.USERS_BAN.CATEGORY_MAIN_ID
    override fun field10(): Field<Int?> = UsersBan.USERS_BAN.CATEGORY_SUB_ID
    override fun field11(): Field<Int?> = UsersBan.USERS_BAN.USER_ID
    override fun component1(): Int? = id
    override fun component2(): String? = detail
    override fun component3(): String? = memo
    override fun component4(): String? = deviceUniqueId
    override fun component5(): Int? = type
    override fun component6(): OffsetDateTime? = endDate
    override fun component7(): OffsetDateTime? = created
    override fun component8(): Int? = categoryContentId
    override fun component9(): Int? = categoryMainId
    override fun component10(): Int? = categorySubId
    override fun component11(): Int? = userId
    override fun value1(): Int? = id
    override fun value2(): String? = detail
    override fun value3(): String? = memo
    override fun value4(): String? = deviceUniqueId
    override fun value5(): Int? = type
    override fun value6(): OffsetDateTime? = endDate
    override fun value7(): OffsetDateTime? = created
    override fun value8(): Int? = categoryContentId
    override fun value9(): Int? = categoryMainId
    override fun value10(): Int? = categorySubId
    override fun value11(): Int? = userId

    override fun value1(value: Int?): UsersBanRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UsersBanRecord {
        this.detail = value
        return this
    }

    override fun value3(value: String?): UsersBanRecord {
        this.memo = value
        return this
    }

    override fun value4(value: String?): UsersBanRecord {
        this.deviceUniqueId = value
        return this
    }

    override fun value5(value: Int?): UsersBanRecord {
        this.type = value
        return this
    }

    override fun value6(value: OffsetDateTime?): UsersBanRecord {
        this.endDate = value
        return this
    }

    override fun value7(value: OffsetDateTime?): UsersBanRecord {
        this.created = value
        return this
    }

    override fun value8(value: Int?): UsersBanRecord {
        this.categoryContentId = value
        return this
    }

    override fun value9(value: Int?): UsersBanRecord {
        this.categoryMainId = value
        return this
    }

    override fun value10(value: Int?): UsersBanRecord {
        this.categorySubId = value
        return this
    }

    override fun value11(value: Int?): UsersBanRecord {
        this.userId = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: Int?, value6: OffsetDateTime?, value7: OffsetDateTime?, value8: Int?, value9: Int?, value10: Int?, value11: Int?): UsersBanRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised UsersBanRecord
     */
    constructor(id: Int? = null, detail: String? = null, memo: String? = null, deviceUniqueId: String? = null, type: Int? = null, endDate: OffsetDateTime? = null, created: OffsetDateTime? = null, categoryContentId: Int? = null, categoryMainId: Int? = null, categorySubId: Int? = null, userId: Int? = null): this() {
        this.id = id
        this.detail = detail
        this.memo = memo
        this.deviceUniqueId = deviceUniqueId
        this.type = type
        this.endDate = endDate
        this.created = created
        this.categoryContentId = categoryContentId
        this.categoryMainId = categoryMainId
        this.categorySubId = categorySubId
        this.userId = userId
    }
}
