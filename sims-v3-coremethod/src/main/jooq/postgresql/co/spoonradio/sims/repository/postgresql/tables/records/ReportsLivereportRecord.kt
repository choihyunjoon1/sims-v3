/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.ReportsLivereport

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReportsLivereportRecord() : UpdatableRecordImpl<ReportsLivereportRecord>(ReportsLivereport.REPORTS_LIVEREPORT), Record9<Int?, Int?, String?, String?, LocalDate?, String?, String?, String?, LocalDate?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var reportType: Int?
        set(value) = set(1, value)
        get() = get(1) as Int?

    var reportDescr: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var reporter: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var reported: LocalDate?
        set(value) = set(4, value)
        get() = get(4) as LocalDate?

    var live: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var liveAuthor: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var liveStreamName: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var liveCreated: LocalDate?
        set(value) = set(8, value)
        get() = get(8) as LocalDate?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<Int?, Int?, String?, String?, LocalDate?, String?, String?, String?, LocalDate?> = super.fieldsRow() as Row9<Int?, Int?, String?, String?, LocalDate?, String?, String?, String?, LocalDate?>
    override fun valuesRow(): Row9<Int?, Int?, String?, String?, LocalDate?, String?, String?, String?, LocalDate?> = super.valuesRow() as Row9<Int?, Int?, String?, String?, LocalDate?, String?, String?, String?, LocalDate?>
    override fun field1(): Field<Int?> = ReportsLivereport.REPORTS_LIVEREPORT.ID
    override fun field2(): Field<Int?> = ReportsLivereport.REPORTS_LIVEREPORT.REPORT_TYPE
    override fun field3(): Field<String?> = ReportsLivereport.REPORTS_LIVEREPORT.REPORT_DESCR
    override fun field4(): Field<String?> = ReportsLivereport.REPORTS_LIVEREPORT.REPORTER
    override fun field5(): Field<LocalDate?> = ReportsLivereport.REPORTS_LIVEREPORT.REPORTED
    override fun field6(): Field<String?> = ReportsLivereport.REPORTS_LIVEREPORT.LIVE
    override fun field7(): Field<String?> = ReportsLivereport.REPORTS_LIVEREPORT.LIVE_AUTHOR
    override fun field8(): Field<String?> = ReportsLivereport.REPORTS_LIVEREPORT.LIVE_STREAM_NAME
    override fun field9(): Field<LocalDate?> = ReportsLivereport.REPORTS_LIVEREPORT.LIVE_CREATED
    override fun component1(): Int? = id
    override fun component2(): Int? = reportType
    override fun component3(): String? = reportDescr
    override fun component4(): String? = reporter
    override fun component5(): LocalDate? = reported
    override fun component6(): String? = live
    override fun component7(): String? = liveAuthor
    override fun component8(): String? = liveStreamName
    override fun component9(): LocalDate? = liveCreated
    override fun value1(): Int? = id
    override fun value2(): Int? = reportType
    override fun value3(): String? = reportDescr
    override fun value4(): String? = reporter
    override fun value5(): LocalDate? = reported
    override fun value6(): String? = live
    override fun value7(): String? = liveAuthor
    override fun value8(): String? = liveStreamName
    override fun value9(): LocalDate? = liveCreated

    override fun value1(value: Int?): ReportsLivereportRecord {
        this.id = value
        return this
    }

    override fun value2(value: Int?): ReportsLivereportRecord {
        this.reportType = value
        return this
    }

    override fun value3(value: String?): ReportsLivereportRecord {
        this.reportDescr = value
        return this
    }

    override fun value4(value: String?): ReportsLivereportRecord {
        this.reporter = value
        return this
    }

    override fun value5(value: LocalDate?): ReportsLivereportRecord {
        this.reported = value
        return this
    }

    override fun value6(value: String?): ReportsLivereportRecord {
        this.live = value
        return this
    }

    override fun value7(value: String?): ReportsLivereportRecord {
        this.liveAuthor = value
        return this
    }

    override fun value8(value: String?): ReportsLivereportRecord {
        this.liveStreamName = value
        return this
    }

    override fun value9(value: LocalDate?): ReportsLivereportRecord {
        this.liveCreated = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: String?, value5: LocalDate?, value6: String?, value7: String?, value8: String?, value9: LocalDate?): ReportsLivereportRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised ReportsLivereportRecord
     */
    constructor(id: Int? = null, reportType: Int? = null, reportDescr: String? = null, reporter: String? = null, reported: LocalDate? = null, live: String? = null, liveAuthor: String? = null, liveStreamName: String? = null, liveCreated: LocalDate? = null): this() {
        this.id = id
        this.reportType = reportType
        this.reportDescr = reportDescr
        this.reporter = reporter
        this.reported = reported
        this.live = live
        this.liveAuthor = liveAuthor
        this.liveStreamName = liveStreamName
        this.liveCreated = liveCreated
    }
}
