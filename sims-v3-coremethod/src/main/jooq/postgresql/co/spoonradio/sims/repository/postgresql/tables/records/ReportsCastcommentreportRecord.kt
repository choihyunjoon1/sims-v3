/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.ReportsCastcommentreport

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReportsCastcommentreportRecord() : UpdatableRecordImpl<ReportsCastcommentreportRecord>(ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT), Record11<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, LocalDate?, String?, Int?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var reporter: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var reported: LocalDate?
        set(value) = set(2, value)
        get() = get(2) as LocalDate?

    var cast: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var castAuthor: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var castCreated: LocalDate?
        set(value) = set(5, value)
        get() = get(5) as LocalDate?

    var commentAuthor: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var commentContents: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var commentCreated: LocalDate?
        set(value) = set(8, value)
        get() = get(8) as LocalDate?

    var reportDescr: String?
        set(value) = set(9, value)
        get() = get(9) as String?

    var reportType: Int?
        set(value) = set(10, value)
        get() = get(10) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, LocalDate?, String?, Int?> = super.fieldsRow() as Row11<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, LocalDate?, String?, Int?>
    override fun valuesRow(): Row11<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, LocalDate?, String?, Int?> = super.valuesRow() as Row11<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, LocalDate?, String?, Int?>
    override fun field1(): Field<Int?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.ID
    override fun field2(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.REPORTER
    override fun field3(): Field<LocalDate?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.REPORTED
    override fun field4(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.CAST
    override fun field5(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.CAST_AUTHOR
    override fun field6(): Field<LocalDate?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.CAST_CREATED
    override fun field7(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.COMMENT_AUTHOR
    override fun field8(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.COMMENT_CONTENTS
    override fun field9(): Field<LocalDate?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.COMMENT_CREATED
    override fun field10(): Field<String?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.REPORT_DESCR
    override fun field11(): Field<Int?> = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT.REPORT_TYPE
    override fun component1(): Int? = id
    override fun component2(): String? = reporter
    override fun component3(): LocalDate? = reported
    override fun component4(): String? = cast
    override fun component5(): String? = castAuthor
    override fun component6(): LocalDate? = castCreated
    override fun component7(): String? = commentAuthor
    override fun component8(): String? = commentContents
    override fun component9(): LocalDate? = commentCreated
    override fun component10(): String? = reportDescr
    override fun component11(): Int? = reportType
    override fun value1(): Int? = id
    override fun value2(): String? = reporter
    override fun value3(): LocalDate? = reported
    override fun value4(): String? = cast
    override fun value5(): String? = castAuthor
    override fun value6(): LocalDate? = castCreated
    override fun value7(): String? = commentAuthor
    override fun value8(): String? = commentContents
    override fun value9(): LocalDate? = commentCreated
    override fun value10(): String? = reportDescr
    override fun value11(): Int? = reportType

    override fun value1(value: Int?): ReportsCastcommentreportRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ReportsCastcommentreportRecord {
        this.reporter = value
        return this
    }

    override fun value3(value: LocalDate?): ReportsCastcommentreportRecord {
        this.reported = value
        return this
    }

    override fun value4(value: String?): ReportsCastcommentreportRecord {
        this.cast = value
        return this
    }

    override fun value5(value: String?): ReportsCastcommentreportRecord {
        this.castAuthor = value
        return this
    }

    override fun value6(value: LocalDate?): ReportsCastcommentreportRecord {
        this.castCreated = value
        return this
    }

    override fun value7(value: String?): ReportsCastcommentreportRecord {
        this.commentAuthor = value
        return this
    }

    override fun value8(value: String?): ReportsCastcommentreportRecord {
        this.commentContents = value
        return this
    }

    override fun value9(value: LocalDate?): ReportsCastcommentreportRecord {
        this.commentCreated = value
        return this
    }

    override fun value10(value: String?): ReportsCastcommentreportRecord {
        this.reportDescr = value
        return this
    }

    override fun value11(value: Int?): ReportsCastcommentreportRecord {
        this.reportType = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: LocalDate?, value4: String?, value5: String?, value6: LocalDate?, value7: String?, value8: String?, value9: LocalDate?, value10: String?, value11: Int?): ReportsCastcommentreportRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised ReportsCastcommentreportRecord
     */
    constructor(id: Int? = null, reporter: String? = null, reported: LocalDate? = null, cast: String? = null, castAuthor: String? = null, castCreated: LocalDate? = null, commentAuthor: String? = null, commentContents: String? = null, commentCreated: LocalDate? = null, reportDescr: String? = null, reportType: Int? = null): this() {
        this.id = id
        this.reporter = reporter
        this.reported = reported
        this.cast = cast
        this.castAuthor = castAuthor
        this.castCreated = castCreated
        this.commentAuthor = commentAuthor
        this.commentContents = commentContents
        this.commentCreated = commentCreated
        this.reportDescr = reportDescr
        this.reportType = reportType
    }
}
