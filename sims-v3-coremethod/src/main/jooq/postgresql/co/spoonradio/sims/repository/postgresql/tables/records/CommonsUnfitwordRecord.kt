/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.CommonsUnfitword

import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CommonsUnfitwordRecord() : UpdatableRecordImpl<CommonsUnfitwordRecord>(CommonsUnfitword.COMMONS_UNFITWORD), Record7<Int?, String?, OffsetDateTime?, Boolean?, Boolean?, Boolean?, String?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var word: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var created: OffsetDateTime?
        set(value) = set(2, value)
        get() = get(2) as OffsetDateTime?

    var isUsed: Boolean?
        set(value) = set(3, value)
        get() = get(3) as Boolean?

    var toContents: Boolean?
        set(value) = set(4, value)
        get() = get(4) as Boolean?

    var toNickname: Boolean?
        set(value) = set(5, value)
        get() = get(5) as Boolean?

    var reword: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<Int?, String?, OffsetDateTime?, Boolean?, Boolean?, Boolean?, String?> = super.fieldsRow() as Row7<Int?, String?, OffsetDateTime?, Boolean?, Boolean?, Boolean?, String?>
    override fun valuesRow(): Row7<Int?, String?, OffsetDateTime?, Boolean?, Boolean?, Boolean?, String?> = super.valuesRow() as Row7<Int?, String?, OffsetDateTime?, Boolean?, Boolean?, Boolean?, String?>
    override fun field1(): Field<Int?> = CommonsUnfitword.COMMONS_UNFITWORD.ID
    override fun field2(): Field<String?> = CommonsUnfitword.COMMONS_UNFITWORD.WORD
    override fun field3(): Field<OffsetDateTime?> = CommonsUnfitword.COMMONS_UNFITWORD.CREATED
    override fun field4(): Field<Boolean?> = CommonsUnfitword.COMMONS_UNFITWORD.IS_USED
    override fun field5(): Field<Boolean?> = CommonsUnfitword.COMMONS_UNFITWORD.TO_CONTENTS
    override fun field6(): Field<Boolean?> = CommonsUnfitword.COMMONS_UNFITWORD.TO_NICKNAME
    override fun field7(): Field<String?> = CommonsUnfitword.COMMONS_UNFITWORD.REWORD
    override fun component1(): Int? = id
    override fun component2(): String? = word
    override fun component3(): OffsetDateTime? = created
    override fun component4(): Boolean? = isUsed
    override fun component5(): Boolean? = toContents
    override fun component6(): Boolean? = toNickname
    override fun component7(): String? = reword
    override fun value1(): Int? = id
    override fun value2(): String? = word
    override fun value3(): OffsetDateTime? = created
    override fun value4(): Boolean? = isUsed
    override fun value5(): Boolean? = toContents
    override fun value6(): Boolean? = toNickname
    override fun value7(): String? = reword

    override fun value1(value: Int?): CommonsUnfitwordRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): CommonsUnfitwordRecord {
        this.word = value
        return this
    }

    override fun value3(value: OffsetDateTime?): CommonsUnfitwordRecord {
        this.created = value
        return this
    }

    override fun value4(value: Boolean?): CommonsUnfitwordRecord {
        this.isUsed = value
        return this
    }

    override fun value5(value: Boolean?): CommonsUnfitwordRecord {
        this.toContents = value
        return this
    }

    override fun value6(value: Boolean?): CommonsUnfitwordRecord {
        this.toNickname = value
        return this
    }

    override fun value7(value: String?): CommonsUnfitwordRecord {
        this.reword = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: OffsetDateTime?, value4: Boolean?, value5: Boolean?, value6: Boolean?, value7: String?): CommonsUnfitwordRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised CommonsUnfitwordRecord
     */
    constructor(id: Int? = null, word: String? = null, created: OffsetDateTime? = null, isUsed: Boolean? = null, toContents: Boolean? = null, toNickname: Boolean? = null, reword: String? = null): this() {
        this.id = id
        this.word = word
        this.created = created
        this.isUsed = isUsed
        this.toContents = toContents
        this.toNickname = toNickname
        this.reword = reword
    }
}
