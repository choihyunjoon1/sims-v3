/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.ReportsLivemessagereport

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReportsLivemessagereportRecord() : UpdatableRecordImpl<ReportsLivemessagereportRecord>(ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT), Record10<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, String?, Int?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var reporter: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var reported: LocalDate?
        set(value) = set(2, value)
        get() = get(2) as LocalDate?

    var live: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var liveAuthor: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var liveCreated: LocalDate?
        set(value) = set(5, value)
        get() = get(5) as LocalDate?

    var messageAuthor: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var messageContents: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var reportDescr: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var reportType: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, String?, Int?> = super.fieldsRow() as Row10<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, String?, Int?>
    override fun valuesRow(): Row10<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, String?, Int?> = super.valuesRow() as Row10<Int?, String?, LocalDate?, String?, String?, LocalDate?, String?, String?, String?, Int?>
    override fun field1(): Field<Int?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.ID
    override fun field2(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.REPORTER
    override fun field3(): Field<LocalDate?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.REPORTED
    override fun field4(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.LIVE
    override fun field5(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.LIVE_AUTHOR
    override fun field6(): Field<LocalDate?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.LIVE_CREATED
    override fun field7(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.MESSAGE_AUTHOR
    override fun field8(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.MESSAGE_CONTENTS
    override fun field9(): Field<String?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.REPORT_DESCR
    override fun field10(): Field<Int?> = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT.REPORT_TYPE
    override fun component1(): Int? = id
    override fun component2(): String? = reporter
    override fun component3(): LocalDate? = reported
    override fun component4(): String? = live
    override fun component5(): String? = liveAuthor
    override fun component6(): LocalDate? = liveCreated
    override fun component7(): String? = messageAuthor
    override fun component8(): String? = messageContents
    override fun component9(): String? = reportDescr
    override fun component10(): Int? = reportType
    override fun value1(): Int? = id
    override fun value2(): String? = reporter
    override fun value3(): LocalDate? = reported
    override fun value4(): String? = live
    override fun value5(): String? = liveAuthor
    override fun value6(): LocalDate? = liveCreated
    override fun value7(): String? = messageAuthor
    override fun value8(): String? = messageContents
    override fun value9(): String? = reportDescr
    override fun value10(): Int? = reportType

    override fun value1(value: Int?): ReportsLivemessagereportRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ReportsLivemessagereportRecord {
        this.reporter = value
        return this
    }

    override fun value3(value: LocalDate?): ReportsLivemessagereportRecord {
        this.reported = value
        return this
    }

    override fun value4(value: String?): ReportsLivemessagereportRecord {
        this.live = value
        return this
    }

    override fun value5(value: String?): ReportsLivemessagereportRecord {
        this.liveAuthor = value
        return this
    }

    override fun value6(value: LocalDate?): ReportsLivemessagereportRecord {
        this.liveCreated = value
        return this
    }

    override fun value7(value: String?): ReportsLivemessagereportRecord {
        this.messageAuthor = value
        return this
    }

    override fun value8(value: String?): ReportsLivemessagereportRecord {
        this.messageContents = value
        return this
    }

    override fun value9(value: String?): ReportsLivemessagereportRecord {
        this.reportDescr = value
        return this
    }

    override fun value10(value: Int?): ReportsLivemessagereportRecord {
        this.reportType = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: LocalDate?, value4: String?, value5: String?, value6: LocalDate?, value7: String?, value8: String?, value9: String?, value10: Int?): ReportsLivemessagereportRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised ReportsLivemessagereportRecord
     */
    constructor(id: Int? = null, reporter: String? = null, reported: LocalDate? = null, live: String? = null, liveAuthor: String? = null, liveCreated: LocalDate? = null, messageAuthor: String? = null, messageContents: String? = null, reportDescr: String? = null, reportType: Int? = null): this() {
        this.id = id
        this.reporter = reporter
        this.reported = reported
        this.live = live
        this.liveAuthor = liveAuthor
        this.liveCreated = liveCreated
        this.messageAuthor = messageAuthor
        this.messageContents = messageContents
        this.reportDescr = reportDescr
        this.reportType = reportType
    }
}
