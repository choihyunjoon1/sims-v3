/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.UsersProfile

import java.time.LocalDate
import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record22
import org.jooq.Row22
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersProfileRecord() : UpdatableRecordImpl<UsersProfileRecord>(UsersProfile.USERS_PROFILE), Record22<Int?, String?, String?, String?, Int?, LocalDate?, String?, String?, Array<Any?>?, Array<Any?>?, Boolean?, Int?, Int?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, String?, Boolean?, Boolean?, Boolean?, Short?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var nickname: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var tag: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var description: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var gender: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var dateOfBirth: LocalDate?
        set(value) = set(5, value)
        get() = get(5) as LocalDate?

    var profileUrl: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var profileKey: String?
        set(value) = set(7, value)
        get() = get(7) as String?

    var reporters: Array<Any?>?
        set(value) = set(8, value)
        get() = get(8) as Array<Any?>?

    var topImpressions: Array<Any?>?
        set(value) = set(9, value)
        get() = get(9) as Array<Any?>?

    var isLive: Boolean?
        set(value) = set(10, value)
        get() = get(10) as Boolean?

    var fanCount: Int?
        set(value) = set(11, value)
        get() = get(11) as Int?

    var myCount: Int?
        set(value) = set(12, value)
        get() = get(12) as Int?

    var currentLiveId: Int?
        set(value) = set(13, value)
        get() = get(13) as Int?

    var lastLiveCreated: OffsetDateTime?
        set(value) = set(14, value)
        get() = get(14) as OffsetDateTime?

    var created: OffsetDateTime?
        set(value) = set(15, value)
        get() = get(15) as OffsetDateTime?

    var userId: Int?
        set(value) = set(16, value)
        get() = get(16) as Int?

    var country: String?
        set(value) = set(17, value)
        get() = get(17) as String?

    var isPublicCastStorage: Boolean?
        set(value) = set(18, value)
        get() = get(18) as Boolean?

    var isPublicLike: Boolean?
        set(value) = set(19, value)
        get() = get(19) as Boolean?

    var isVip: Boolean?
        set(value) = set(20, value)
        get() = get(20) as Boolean?

    var verifyStatus: Short?
        set(value) = set(21, value)
        get() = get(21) as Short?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row22<Int?, String?, String?, String?, Int?, LocalDate?, String?, String?, Array<Any?>?, Array<Any?>?, Boolean?, Int?, Int?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, String?, Boolean?, Boolean?, Boolean?, Short?> = super.fieldsRow() as Row22<Int?, String?, String?, String?, Int?, LocalDate?, String?, String?, Array<Any?>?, Array<Any?>?, Boolean?, Int?, Int?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, String?, Boolean?, Boolean?, Boolean?, Short?>
    override fun valuesRow(): Row22<Int?, String?, String?, String?, Int?, LocalDate?, String?, String?, Array<Any?>?, Array<Any?>?, Boolean?, Int?, Int?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, String?, Boolean?, Boolean?, Boolean?, Short?> = super.valuesRow() as Row22<Int?, String?, String?, String?, Int?, LocalDate?, String?, String?, Array<Any?>?, Array<Any?>?, Boolean?, Int?, Int?, Int?, OffsetDateTime?, OffsetDateTime?, Int?, String?, Boolean?, Boolean?, Boolean?, Short?>
    override fun field1(): Field<Int?> = UsersProfile.USERS_PROFILE.ID
    override fun field2(): Field<String?> = UsersProfile.USERS_PROFILE.NICKNAME
    override fun field3(): Field<String?> = UsersProfile.USERS_PROFILE.TAG
    override fun field4(): Field<String?> = UsersProfile.USERS_PROFILE.DESCRIPTION
    override fun field5(): Field<Int?> = UsersProfile.USERS_PROFILE.GENDER
    override fun field6(): Field<LocalDate?> = UsersProfile.USERS_PROFILE.DATE_OF_BIRTH
    override fun field7(): Field<String?> = UsersProfile.USERS_PROFILE.PROFILE_URL
    override fun field8(): Field<String?> = UsersProfile.USERS_PROFILE.PROFILE_KEY
    override fun field9(): Field<Array<Any?>?> = UsersProfile.USERS_PROFILE.REPORTERS
    override fun field10(): Field<Array<Any?>?> = UsersProfile.USERS_PROFILE.TOP_IMPRESSIONS
    override fun field11(): Field<Boolean?> = UsersProfile.USERS_PROFILE.IS_LIVE
    override fun field12(): Field<Int?> = UsersProfile.USERS_PROFILE.FAN_COUNT
    override fun field13(): Field<Int?> = UsersProfile.USERS_PROFILE.MY_COUNT
    override fun field14(): Field<Int?> = UsersProfile.USERS_PROFILE.CURRENT_LIVE_ID
    override fun field15(): Field<OffsetDateTime?> = UsersProfile.USERS_PROFILE.LAST_LIVE_CREATED
    override fun field16(): Field<OffsetDateTime?> = UsersProfile.USERS_PROFILE.CREATED
    override fun field17(): Field<Int?> = UsersProfile.USERS_PROFILE.USER_ID
    override fun field18(): Field<String?> = UsersProfile.USERS_PROFILE.COUNTRY
    override fun field19(): Field<Boolean?> = UsersProfile.USERS_PROFILE.IS_PUBLIC_CAST_STORAGE
    override fun field20(): Field<Boolean?> = UsersProfile.USERS_PROFILE.IS_PUBLIC_LIKE
    override fun field21(): Field<Boolean?> = UsersProfile.USERS_PROFILE.IS_VIP
    override fun field22(): Field<Short?> = UsersProfile.USERS_PROFILE.VERIFY_STATUS
    override fun component1(): Int? = id
    override fun component2(): String? = nickname
    override fun component3(): String? = tag
    override fun component4(): String? = description
    override fun component5(): Int? = gender
    override fun component6(): LocalDate? = dateOfBirth
    override fun component7(): String? = profileUrl
    override fun component8(): String? = profileKey
    override fun component9(): Array<Any?>? = reporters
    override fun component10(): Array<Any?>? = topImpressions
    override fun component11(): Boolean? = isLive
    override fun component12(): Int? = fanCount
    override fun component13(): Int? = myCount
    override fun component14(): Int? = currentLiveId
    override fun component15(): OffsetDateTime? = lastLiveCreated
    override fun component16(): OffsetDateTime? = created
    override fun component17(): Int? = userId
    override fun component18(): String? = country
    override fun component19(): Boolean? = isPublicCastStorage
    override fun component20(): Boolean? = isPublicLike
    override fun component21(): Boolean? = isVip
    override fun component22(): Short? = verifyStatus
    override fun value1(): Int? = id
    override fun value2(): String? = nickname
    override fun value3(): String? = tag
    override fun value4(): String? = description
    override fun value5(): Int? = gender
    override fun value6(): LocalDate? = dateOfBirth
    override fun value7(): String? = profileUrl
    override fun value8(): String? = profileKey
    override fun value9(): Array<Any?>? = reporters
    override fun value10(): Array<Any?>? = topImpressions
    override fun value11(): Boolean? = isLive
    override fun value12(): Int? = fanCount
    override fun value13(): Int? = myCount
    override fun value14(): Int? = currentLiveId
    override fun value15(): OffsetDateTime? = lastLiveCreated
    override fun value16(): OffsetDateTime? = created
    override fun value17(): Int? = userId
    override fun value18(): String? = country
    override fun value19(): Boolean? = isPublicCastStorage
    override fun value20(): Boolean? = isPublicLike
    override fun value21(): Boolean? = isVip
    override fun value22(): Short? = verifyStatus

    override fun value1(value: Int?): UsersProfileRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UsersProfileRecord {
        this.nickname = value
        return this
    }

    override fun value3(value: String?): UsersProfileRecord {
        this.tag = value
        return this
    }

    override fun value4(value: String?): UsersProfileRecord {
        this.description = value
        return this
    }

    override fun value5(value: Int?): UsersProfileRecord {
        this.gender = value
        return this
    }

    override fun value6(value: LocalDate?): UsersProfileRecord {
        this.dateOfBirth = value
        return this
    }

    override fun value7(value: String?): UsersProfileRecord {
        this.profileUrl = value
        return this
    }

    override fun value8(value: String?): UsersProfileRecord {
        this.profileKey = value
        return this
    }

    override fun value9(value: Array<Any?>?): UsersProfileRecord {
        this.reporters = value
        return this
    }

    override fun value10(value: Array<Any?>?): UsersProfileRecord {
        this.topImpressions = value
        return this
    }

    override fun value11(value: Boolean?): UsersProfileRecord {
        this.isLive = value
        return this
    }

    override fun value12(value: Int?): UsersProfileRecord {
        this.fanCount = value
        return this
    }

    override fun value13(value: Int?): UsersProfileRecord {
        this.myCount = value
        return this
    }

    override fun value14(value: Int?): UsersProfileRecord {
        this.currentLiveId = value
        return this
    }

    override fun value15(value: OffsetDateTime?): UsersProfileRecord {
        this.lastLiveCreated = value
        return this
    }

    override fun value16(value: OffsetDateTime?): UsersProfileRecord {
        this.created = value
        return this
    }

    override fun value17(value: Int?): UsersProfileRecord {
        this.userId = value
        return this
    }

    override fun value18(value: String?): UsersProfileRecord {
        this.country = value
        return this
    }

    override fun value19(value: Boolean?): UsersProfileRecord {
        this.isPublicCastStorage = value
        return this
    }

    override fun value20(value: Boolean?): UsersProfileRecord {
        this.isPublicLike = value
        return this
    }

    override fun value21(value: Boolean?): UsersProfileRecord {
        this.isVip = value
        return this
    }

    override fun value22(value: Short?): UsersProfileRecord {
        this.verifyStatus = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: Int?, value6: LocalDate?, value7: String?, value8: String?, value9: Array<Any?>?, value10: Array<Any?>?, value11: Boolean?, value12: Int?, value13: Int?, value14: Int?, value15: OffsetDateTime?, value16: OffsetDateTime?, value17: Int?, value18: String?, value19: Boolean?, value20: Boolean?, value21: Boolean?, value22: Short?): UsersProfileRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        this.value17(value17)
        this.value18(value18)
        this.value19(value19)
        this.value20(value20)
        this.value21(value21)
        this.value22(value22)
        return this
    }

    /**
     * Create a detached, initialised UsersProfileRecord
     */
    constructor(id: Int? = null, nickname: String? = null, tag: String? = null, description: String? = null, gender: Int? = null, dateOfBirth: LocalDate? = null, profileUrl: String? = null, profileKey: String? = null, reporters: Array<Any?>? = null, topImpressions: Array<Any?>? = null, isLive: Boolean? = null, fanCount: Int? = null, myCount: Int? = null, currentLiveId: Int? = null, lastLiveCreated: OffsetDateTime? = null, created: OffsetDateTime? = null, userId: Int? = null, country: String? = null, isPublicCastStorage: Boolean? = null, isPublicLike: Boolean? = null, isVip: Boolean? = null, verifyStatus: Short? = null): this() {
        this.id = id
        this.nickname = nickname
        this.tag = tag
        this.description = description
        this.gender = gender
        this.dateOfBirth = dateOfBirth
        this.profileUrl = profileUrl
        this.profileKey = profileKey
        this.reporters = reporters
        this.topImpressions = topImpressions
        this.isLive = isLive
        this.fanCount = fanCount
        this.myCount = myCount
        this.currentLiveId = currentLiveId
        this.lastLiveCreated = lastLiveCreated
        this.created = created
        this.userId = userId
        this.country = country
        this.isPublicCastStorage = isPublicCastStorage
        this.isPublicLike = isPublicLike
        this.isVip = isVip
        this.verifyStatus = verifyStatus
    }
}
