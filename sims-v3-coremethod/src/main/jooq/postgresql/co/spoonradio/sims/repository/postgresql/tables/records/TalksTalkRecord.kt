/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql.tables.records


import co.spoonradio.sims.repository.postgresql.tables.TalksTalk

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TalksTalkRecord() : UpdatableRecordImpl<TalksTalkRecord>(TalksTalk.TALKS_TALK) {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var title: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var imgKey: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var imgUrl: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var voiceCommentCount: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var reporters: Array<Any?>?
        set(value) = set(5, value)
        get() = get(5) as Array<Any?>?

    var memberCount: Int?
        set(value) = set(6, value)
        get() = get(6) as Int?

    var likeCount: Int?
        set(value) = set(7, value)
        get() = get(7) as Int?

    var created: OffsetDateTime?
        set(value) = set(8, value)
        get() = get(8) as OffsetDateTime?

    var authorId: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    var blockUsers: Array<Any?>?
        set(value) = set(10, value)
        get() = get(10) as Array<Any?>?

    var bannerImgKey: String?
        set(value) = set(11, value)
        get() = get(11) as String?

    var bannerImgUrl: String?
        set(value) = set(12, value)
        get() = get(12) as String?

    var eventEnd: OffsetDateTime?
        set(value) = set(13, value)
        get() = get(13) as OffsetDateTime?

    var isEvent: Boolean?
        set(value) = set(14, value)
        get() = get(14) as Boolean?

    var commentLikeCount: Int?
        set(value) = set(15, value)
        get() = get(15) as Int?

    var expired: OffsetDateTime?
        set(value) = set(16, value)
        get() = get(16) as OffsetDateTime?

    var isPrivate: Boolean?
        set(value) = set(17, value)
        get() = get(17) as Boolean?

    var isVolatile: Boolean?
        set(value) = set(18, value)
        get() = get(18) as Boolean?

    var text: String?
        set(value) = set(19, value)
        get() = get(19) as String?

    var isComposited: Boolean?
        set(value) = set(20, value)
        get() = get(20) as Boolean?

    var commentPlayCount: Int?
        set(value) = set(21, value)
        get() = get(21) as Int?

    var enterCount: Int?
        set(value) = set(22, value)
        get() = get(22) as Int?

    var tags: Array<Any?>?
        set(value) = set(23, value)
        get() = get(23) as Array<Any?>?

    var status: Short?
        set(value) = set(24, value)
        get() = get(24) as Short?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised TalksTalkRecord
     */
    constructor(id: Int? = null, title: String? = null, imgKey: String? = null, imgUrl: String? = null, voiceCommentCount: Int? = null, reporters: Array<Any?>? = null, memberCount: Int? = null, likeCount: Int? = null, created: OffsetDateTime? = null, authorId: Int? = null, blockUsers: Array<Any?>? = null, bannerImgKey: String? = null, bannerImgUrl: String? = null, eventEnd: OffsetDateTime? = null, isEvent: Boolean? = null, commentLikeCount: Int? = null, expired: OffsetDateTime? = null, isPrivate: Boolean? = null, isVolatile: Boolean? = null, text: String? = null, isComposited: Boolean? = null, commentPlayCount: Int? = null, enterCount: Int? = null, tags: Array<Any?>? = null, status: Short? = null): this() {
        this.id = id
        this.title = title
        this.imgKey = imgKey
        this.imgUrl = imgUrl
        this.voiceCommentCount = voiceCommentCount
        this.reporters = reporters
        this.memberCount = memberCount
        this.likeCount = likeCount
        this.created = created
        this.authorId = authorId
        this.blockUsers = blockUsers
        this.bannerImgKey = bannerImgKey
        this.bannerImgUrl = bannerImgUrl
        this.eventEnd = eventEnd
        this.isEvent = isEvent
        this.commentLikeCount = commentLikeCount
        this.expired = expired
        this.isPrivate = isPrivate
        this.isVolatile = isVolatile
        this.text = text
        this.isComposited = isComposited
        this.commentPlayCount = commentPlayCount
        this.enterCount = enterCount
        this.tags = tags
        this.status = status
    }
}
