/*
 * This file is generated by jOOQ.
 */
package co.spoonradio.sims.repository.postgresql


import co.spoonradio.sims.repository.postgresql.tables.CastsCast
import co.spoonradio.sims.repository.postgresql.tables.CastsTextcomment
import co.spoonradio.sims.repository.postgresql.tables.CommonsUnfitword
import co.spoonradio.sims.repository.postgresql.tables.FanboardFancomment
import co.spoonradio.sims.repository.postgresql.tables.FanboardFanmessage
import co.spoonradio.sims.repository.postgresql.tables.NiceNiceauthuserinfo
import co.spoonradio.sims.repository.postgresql.tables.ReportsCastcommentreport
import co.spoonradio.sims.repository.postgresql.tables.ReportsCastreport
import co.spoonradio.sims.repository.postgresql.tables.ReportsLivemessagereport
import co.spoonradio.sims.repository.postgresql.tables.ReportsLivereport
import co.spoonradio.sims.repository.postgresql.tables.ReportsMailboxmessagereport
import co.spoonradio.sims.repository.postgresql.tables.ReportsTalkcommentreport
import co.spoonradio.sims.repository.postgresql.tables.ReportsTalkreport
import co.spoonradio.sims.repository.postgresql.tables.ReportsUserreport
import co.spoonradio.sims.repository.postgresql.tables.TalksTalk
import co.spoonradio.sims.repository.postgresql.tables.TalksTalkvoicecomment
import co.spoonradio.sims.repository.postgresql.tables.UsersAccount
import co.spoonradio.sims.repository.postgresql.tables.UsersAuthortier
import co.spoonradio.sims.repository.postgresql.tables.UsersAuthortierhistory
import co.spoonradio.sims.repository.postgresql.tables.UsersAuthortieruser
import co.spoonradio.sims.repository.postgresql.tables.UsersBan
import co.spoonradio.sims.repository.postgresql.tables.UsersBancategorycontent
import co.spoonradio.sims.repository.postgresql.tables.UsersBancategorymain
import co.spoonradio.sims.repository.postgresql.tables.UsersBancategorysub
import co.spoonradio.sims.repository.postgresql.tables.UsersDevice
import co.spoonradio.sims.repository.postgresql.tables.UsersFollow
import co.spoonradio.sims.repository.postgresql.tables.UsersGrant
import co.spoonradio.sims.repository.postgresql.tables.UsersProfile
import co.spoonradio.sims.repository.postgresql.tables.UsersSpoonuser

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA = DefaultSchema()
    }

    /**
     * The table <code>casts_cast</code>.
     */
    val CASTS_CAST get() = CastsCast.CASTS_CAST

    /**
     * The table <code>casts_textcomment</code>.
     */
    val CASTS_TEXTCOMMENT get() = CastsTextcomment.CASTS_TEXTCOMMENT

    /**
     * The table <code>commons_unfitword</code>.
     */
    val COMMONS_UNFITWORD get() = CommonsUnfitword.COMMONS_UNFITWORD

    /**
     * The table <code>fanboard_fancomment</code>.
     */
    val FANBOARD_FANCOMMENT get() = FanboardFancomment.FANBOARD_FANCOMMENT

    /**
     * The table <code>fanboard_fanmessage</code>.
     */
    val FANBOARD_FANMESSAGE get() = FanboardFanmessage.FANBOARD_FANMESSAGE

    /**
     * The table <code>nice_niceauthuserinfo</code>.
     */
    val NICE_NICEAUTHUSERINFO get() = NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO

    /**
     * The table <code>reports_castcommentreport</code>.
     */
    val REPORTS_CASTCOMMENTREPORT get() = ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT

    /**
     * The table <code>reports_castreport</code>.
     */
    val REPORTS_CASTREPORT get() = ReportsCastreport.REPORTS_CASTREPORT

    /**
     * The table <code>reports_livemessagereport</code>.
     */
    val REPORTS_LIVEMESSAGEREPORT get() = ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT

    /**
     * The table <code>reports_livereport</code>.
     */
    val REPORTS_LIVEREPORT get() = ReportsLivereport.REPORTS_LIVEREPORT

    /**
     * The table <code>reports_mailboxmessagereport</code>.
     */
    val REPORTS_MAILBOXMESSAGEREPORT get() = ReportsMailboxmessagereport.REPORTS_MAILBOXMESSAGEREPORT

    /**
     * The table <code>reports_talkcommentreport</code>.
     */
    val REPORTS_TALKCOMMENTREPORT get() = ReportsTalkcommentreport.REPORTS_TALKCOMMENTREPORT

    /**
     * The table <code>reports_talkreport</code>.
     */
    val REPORTS_TALKREPORT get() = ReportsTalkreport.REPORTS_TALKREPORT

    /**
     * The table <code>reports_userreport</code>.
     */
    val REPORTS_USERREPORT get() = ReportsUserreport.REPORTS_USERREPORT

    /**
     * The table <code>talks_talk</code>.
     */
    val TALKS_TALK get() = TalksTalk.TALKS_TALK

    /**
     * The table <code>talks_talkvoicecomment</code>.
     */
    val TALKS_TALKVOICECOMMENT get() = TalksTalkvoicecomment.TALKS_TALKVOICECOMMENT

    /**
     * The table <code>users_account</code>.
     */
    val USERS_ACCOUNT get() = UsersAccount.USERS_ACCOUNT

    /**
     * The table <code>users_authortier</code>.
     */
    val USERS_AUTHORTIER get() = UsersAuthortier.USERS_AUTHORTIER

    /**
     * The table <code>users_authortierhistory</code>.
     */
    val USERS_AUTHORTIERHISTORY get() = UsersAuthortierhistory.USERS_AUTHORTIERHISTORY

    /**
     * The table <code>users_authortieruser</code>.
     */
    val USERS_AUTHORTIERUSER get() = UsersAuthortieruser.USERS_AUTHORTIERUSER

    /**
     * The table <code>users_ban</code>.
     */
    val USERS_BAN get() = UsersBan.USERS_BAN

    /**
     * The table <code>users_bancategorycontent</code>.
     */
    val USERS_BANCATEGORYCONTENT get() = UsersBancategorycontent.USERS_BANCATEGORYCONTENT

    /**
     * The table <code>users_bancategorymain</code>.
     */
    val USERS_BANCATEGORYMAIN get() = UsersBancategorymain.USERS_BANCATEGORYMAIN

    /**
     * The table <code>users_bancategorysub</code>.
     */
    val USERS_BANCATEGORYSUB get() = UsersBancategorysub.USERS_BANCATEGORYSUB

    /**
     * The table <code>users_device</code>.
     */
    val USERS_DEVICE get() = UsersDevice.USERS_DEVICE

    /**
     * The table <code>users_follow</code>.
     */
    val USERS_FOLLOW get() = UsersFollow.USERS_FOLLOW

    /**
     * The table <code>users_grant</code>.
     */
    val USERS_GRANT get() = UsersGrant.USERS_GRANT

    /**
     * The table <code>users_profile</code>.
     */
    val USERS_PROFILE get() = UsersProfile.USERS_PROFILE

    /**
     * The table <code>users_spoonuser</code>.
     */
    val USERS_SPOONUSER get() = UsersSpoonuser.USERS_SPOONUSER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        CastsCast.CASTS_CAST,
        CastsTextcomment.CASTS_TEXTCOMMENT,
        CommonsUnfitword.COMMONS_UNFITWORD,
        FanboardFancomment.FANBOARD_FANCOMMENT,
        FanboardFanmessage.FANBOARD_FANMESSAGE,
        NiceNiceauthuserinfo.NICE_NICEAUTHUSERINFO,
        ReportsCastcommentreport.REPORTS_CASTCOMMENTREPORT,
        ReportsCastreport.REPORTS_CASTREPORT,
        ReportsLivemessagereport.REPORTS_LIVEMESSAGEREPORT,
        ReportsLivereport.REPORTS_LIVEREPORT,
        ReportsMailboxmessagereport.REPORTS_MAILBOXMESSAGEREPORT,
        ReportsTalkcommentreport.REPORTS_TALKCOMMENTREPORT,
        ReportsTalkreport.REPORTS_TALKREPORT,
        ReportsUserreport.REPORTS_USERREPORT,
        TalksTalk.TALKS_TALK,
        TalksTalkvoicecomment.TALKS_TALKVOICECOMMENT,
        UsersAccount.USERS_ACCOUNT,
        UsersAuthortier.USERS_AUTHORTIER,
        UsersAuthortierhistory.USERS_AUTHORTIERHISTORY,
        UsersAuthortieruser.USERS_AUTHORTIERUSER,
        UsersBan.USERS_BAN,
        UsersBancategorycontent.USERS_BANCATEGORYCONTENT,
        UsersBancategorymain.USERS_BANCATEGORYMAIN,
        UsersBancategorysub.USERS_BANCATEGORYSUB,
        UsersDevice.USERS_DEVICE,
        UsersFollow.USERS_FOLLOW,
        UsersGrant.USERS_GRANT,
        UsersProfile.USERS_PROFILE,
        UsersSpoonuser.USERS_SPOONUSER
    )
}
